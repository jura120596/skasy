(self.webpackChunk=self.webpackChunk||[]).push([[255],{4255:(t,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>n});const a={name:"Types",data:function(t){return{l:1,types:t.$store.state.types,page:1,delete_id:0,show:!1}},mounted:function(){this.getPage()},methods:{getPage:function(){var t=this;window.axios.get("type").then((function(e){var s=[];e.data.data.forEach((function(t){s.push({value:t.id,text:t.name})})),t.$store.state.types=s,t.types=t.$store.state.types}))},delete:function(){var t=this;this.delete_id>0&&window.axios.delete("/type/"+this.delete_id).then((function(e){t.getPage(),t.delete_id=0})).catch((function(t){console.log(t)}))}},watch:{page:function(){this.getPage()},delete_id:function(t){t>0&&this.delete()}}};const n=(0,s(1900).Z)(a,(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("v-container",{staticClass:"cover"},[s("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:t._s("Типы заявок")}}),t._v(" "),t.$store.state.types.length>0?s("div",[s("v-container",t._l(t.$store.state.types,(function(e,a){return s("v-card",{key:a,staticStyle:{position:"relative"},attrs:{elevation:"0"}},[1024===t.$store.state.auth.user.role?s("div",{staticClass:"d-flex crud",staticStyle:{position:"absolute",right:"5px",top:"-10px","font-size":"10px"}},[s("v-btn",{staticClass:"mr-3",attrs:{color:"red",fab:"",small:"",dark:""},on:{click:function(s){t.delete_id=e.value}}},[s("v-icon",[t._v("mdi-delete")])],1)],1):t._e(),t._v(" "),s("h4",[t._v(t._s(e.text))])])})),1)],1):s("div",[s("div",{staticClass:"text-center my-3"},[t._v("Типов пока нет")])]),t._v(" "),1024===t.$store.state.auth.user.role?s("v-btn",{staticClass:"save-btn",attrs:{color:"success",fab:"",dark:""},on:{click:function(e){return t.$router.push("/type/0")}}},[s("v-icon",[t._v("mdi-plus")])],1):t._e()],1)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(self.webpackChunk=self.webpackChunk||[]).push([[729],{4247:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>l});var o=n(4015),i=n.n(o),s=n(3645),a=n.n(s)()(i());a.push([t.id,".photo-input[data-v-595d1e4d]{position:absolute;visibility:hidden}.user-photo[data-v-595d1e4d]{border-radius:200px;width:300px;height:auto;max-height:500px;border:1px solid #01aefe}.user-photo-module[data-v-595d1e4d]{display:flex;flex-direction:column;justify-content:center;align-items:center}","",{version:3,sources:["webpack://./resources/js/components/photo-loader.vue"],names:[],mappings:"AA2FA,8BACA,iBAAA,CACA,iBACA,CAEA,6BACA,mBAAA,CACA,WAAA,CACA,WAAA,CACA,gBAAA,CACA,wBACA,CAEA,oCACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBACA",sourcesContent:['<template>\n    <v-card class="d-flex flex-column" justify-center align-center elevation="0">\n        <input\n                type="file"\n                id="files"\n                @change="addPhoto"\n                class="photo-input"\n                placeholder="azaz"\n                accept="image/jpeg,image/png,image/jpg"\n        />\n\n        <v-btn class="btn my-2" @click="clickOnInput" v-if="!one || !carouselPhotos.length">Добавить фотографию</v-btn>\n        <div v-if="one && loadedPhotos.length" class="text-center">{{loadedPhotos[0].name}}</div>\n        <div v-if="!one && carouselPhotos.length" class="user-photo-module">\n            <v-carousel v-model="n">\n                <v-carousel-item\n                        v-for="(photo, i) in carouselPhotos"\n                        :key="i"\n                        :src="photo"\n                        contain\n                >\n                </v-carousel-item>\n            </v-carousel>\n        </div>\n    </v-card>\n</template>\n\n<script>\n\n    export default {\n        name: \'photo-loader\',\n        props: {\n            radius: {\n                type: Number,\n            },\n            one: {\n                type: Boolean,\n                default: false,\n            }\n        },\n        components: {},\n        data() {\n            return {\n                n: 0,\n                photo: \'\',\n                loadedPhotos: [],\n                carouselPhotos:[],\n                fileImg: null,\n            }\n        },\n        methods: {\n            getPhotos() {\n                return this.loadedPhotos;\n            },\n            getFirst() {\n                return this.loadedPhotos[0];\n            },\n            returnFormData(val) {\n                this.$emit(\'save-photo\', val)\n            },\n            updatePhoto(val) {\n                this.photo = val\n                this.showCropperDialog = false\n            },\n            clickOnInput() {\n                document.getElementById(\'files\').files = (new DataTransfer()).files;\n                document.getElementById(\'files\').click()\n\n            },\n            addPhoto(event) {\n                this.fileImg = event.target.files[0]\n                if (this.fileImg.size > 5024000) {\n                    this.$root.$children[0].snackbarText = \'Размер файла не может быть больше 5МБ\'\n                    this.$root.$children[0].snackbar = true\n                    return;\n                }\n                if(this.loadedPhotos.length > 10) {\n                    this.$root.$children[0].snackbarText = \'Вы не можете загрузить больше 10 фотографий\'\n                    this.$root.$children[0].snackbar = true\n                    return;\n                }\n                this.carouselPhotos.push(URL.createObjectURL(this.fileImg))\n                this.loadedPhotos.push(this.fileImg)\n                this.n = this.loadedPhotos.length-1\n                this.fileImg = null;\n            },\n        },\n    }\n<\/script>\n\n<style scoped>\n    .photo-input {\n        position: absolute;\n        visibility: hidden;\n    }\n\n    .user-photo {\n        border-radius: 200px;\n        width: 300px;\n        height: auto;\n        max-height: 500px;\n        border: 1px solid #01aefe;\n    }\n\n    .user-photo-module {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n</style>\n'],sourceRoot:""}]);const l=a},7136:(t,e,n)=>{"use strict";n.d(e,{Z:()=>i});const o={name:"photo-loader",props:{radius:{type:Number},one:{type:Boolean,default:!1}},components:{},data:function(){return{n:0,photo:"",loadedPhotos:[],carouselPhotos:[],fileImg:null}},methods:{getPhotos:function(){return this.loadedPhotos},getFirst:function(){return this.loadedPhotos[0]},returnFormData:function(t){this.$emit("save-photo",t)},updatePhoto:function(t){this.photo=t,this.showCropperDialog=!1},clickOnInput:function(){document.getElementById("files").files=(new DataTransfer).files,document.getElementById("files").click()},addPhoto:function(t){return this.fileImg=t.target.files[0],this.fileImg.size>5024e3?(this.$root.$children[0].snackbarText="Размер файла не может быть больше 5МБ",void(this.$root.$children[0].snackbar=!0)):this.loadedPhotos.length>10?(this.$root.$children[0].snackbarText="Вы не можете загрузить больше 10 фотографий",void(this.$root.$children[0].snackbar=!0)):(this.carouselPhotos.push(URL.createObjectURL(this.fileImg)),this.loadedPhotos.push(this.fileImg),this.n=this.loadedPhotos.length-1,void(this.fileImg=null))}}};n(8258);const i=(0,n(1900).Z)(o,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("v-card",{staticClass:"d-flex flex-column",attrs:{"justify-center":"","align-center":"",elevation:"0"}},[n("input",{staticClass:"photo-input",attrs:{type:"file",id:"files",placeholder:"azaz",accept:"image/jpeg,image/png,image/jpg"},on:{change:t.addPhoto}}),t._v(" "),t.one&&t.carouselPhotos.length?t._e():n("v-btn",{staticClass:"btn my-2",on:{click:t.clickOnInput}},[t._v("Добавить фотографию")]),t._v(" "),t.one&&t.loadedPhotos.length?n("div",{staticClass:"text-center"},[t._v(t._s(t.loadedPhotos[0].name))]):t._e(),t._v(" "),!t.one&&t.carouselPhotos.length?n("div",{staticClass:"user-photo-module"},[n("v-carousel",{model:{value:t.n,callback:function(e){t.n=e},expression:"n"}},t._l(t.carouselPhotos,(function(t,e){return n("v-carousel-item",{key:e,attrs:{src:t,contain:""}})})),1)],1):t._e()],1)}),[],!1,null,"595d1e4d",null).exports},729:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>i});const o={name:"Files",components:{PhotoLoader:n(7136).Z},data:function(t){return{l:1,file:{title:"",file:null},files:[],page:1,delete_id:0,show:!1,titleError:""}},mounted:function(){this.getPage()},methods:{openDialog:function(){this.show=!0},closeDialog:function(){this.show=!1},getPage:function(){var t=this;window.axios.get("file?",{params:{page:this.page,user_id:this.$route.params.user_id>0?this.$route.params.user_id:null}}).then((function(e){t.files=e.data.data,t.l=e.data.last_page}))},upload:function(){var t=this,e=[this.$refs.loader.getFirst()];if(e.length){var n=new FormData;e.forEach((function(t,e){n.append("file",t,t.name)})),n.append("title",this.file.title);try{window.axios.post("/file/",n).then((function(e){t.getPage()}))}catch(t){console.log(t),this.$root.$children[0].snackbarText="Ошибка сохранения фотографии",this.$root.$children[0].snackbar=!0}}this.closeDialog()},download:function(t){window.axios.get("file/"+t,{method:"GET",responseType:"blob"}).then((function(t){var e=window.URL.createObjectURL(new Blob([t.data])),n=document.createElement("a");n.href=e,n.setAttribute("download",decodeURIComponent(t.headers["content-disposition"].split(";")[2].split("utf-8''")[1])),document.body.appendChild(n),n.click()}))},delete:function(){var t=this;try{window.axios.delete("/file/"+this.delete_id).then((function(e){t.getPage()}))}catch(t){console.log(t),this.$root.$children[0].snackbarText="Ошибка сохранения фотографии",this.$root.$children[0].snackbar=!0}}},watch:{page:function(){this.getPage()},delete_id:function(t){t>0&&this.delete()}}};const i=(0,n(1900).Z)(o,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("v-container",{staticClass:"cover"},[n("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:t._s(t.$route.params.user_id>0?"Файлы пользователя":"Мои файлы")}}),t._v(" "),t.files.length>0?n("div",[n("v-container",[t._l(t.files,(function(e,o){return n("v-card",{key:o,staticClass:"ma-2",staticStyle:{position:"relative"},attrs:{elevation:"0"}},[n("div",{staticClass:"d-flex crud",staticStyle:{position:"absolute",right:"5px",top:"-10px","font-size":"10px"}},[n("v-btn",{staticClass:"mr-3",attrs:{color:"red",fab:"",small:"",dark:""},on:{click:function(n){t.delete_id=e.id}}},[n("v-icon",[t._v("mdi-delete")])],1),t._v(" "),n("v-btn",{attrs:{color:"green",fab:"",small:"",dark:""},on:{click:function(n){return t.download(e.id)}}},[n("v-icon",[t._v("mdi-download")])],1)],1),t._v(" "),n("h4",{staticStyle:{"max-width":"60%"}},[t._v(t._s(e.title))])])})),t._v(" "),t.l>1?n("div",{staticClass:"text-center xs-12"},[n("v-pagination",{attrs:{length:t.l,"total-visible":3},model:{value:t.page,callback:function(e){t.page=e},expression:"page"}})],1):t._e()],2)],1):n("div",[n("div",{staticClass:"text-center my-3"},[t._v("Файлов пока нет")])]),t._v(" "),n("v-btn",{staticClass:"save-btn",attrs:{color:"success",fab:"",dark:""},on:{click:t.openDialog}},[n("v-icon",[t._v("mdi-paperclip")])],1),t._v(" "),t.show?n("v-dialog",{attrs:{value:t.show,fullscreen:t.$vuetify.breakpoint.mobile},on:{close:t.closeDialog}},[[n("v-card",[n("v-toolbar",{staticClass:"container py-1 my-0 justify-space-between",attrs:{elevation:"1"}},[n("v-toolbar-title",[n("span",{staticClass:"headline"},[t._v("Загрузка файла")])]),t._v(" "),n("v-spacer"),t._v(" "),n("v-toolbar-title",[n("v-icon",{staticClass:"flex-grow-0",attrs:{text:""},on:{click:t.closeDialog}},[t._v("X")])],1)],1),t._v(" "),n("v-card-text",[n("v-container",[n("v-col",[n("v-card-text",[t._v("\n                                Выберите файл для загрузки, и обозначте его\n                            ")]),t._v(" "),n("v-form",{nativeOn:{keyup:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:t.upload.apply(null,arguments)}}},[n("v-text-field",{attrs:{label:"Обозначение(Инн, паспорт)","error-messages":t.titleError,name:"title",type:"text",required:""},model:{value:t.file.title,callback:function(e){t.$set(t.file,"title",e)},expression:"file.title"}}),t._v(" "),n("photo-loader",{ref:"loader",attrs:{one:!0}}),t._v(" "),n("v-card",{staticClass:"d-flex justify-center align-center",attrs:{flat:"",height:"auto",tile:""}},[n("v-btn",{attrs:{color:"dark",disabled:""==t.file.title},on:{click:t.upload}},[t._v("\n                                        Подтвердить\n                                    ")])],1)],1)],1)],1)],1)],1)]],2):t._e()],1)}),[],!1,null,null,null).exports},8258:(t,e,n)=>{var o=n(4247);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[t.id,o,""]]),o.locals&&(t.exports=o.locals);(0,n(5346).Z)("34d8856a",o,!0,{})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(self.webpackChunk=self.webpackChunk||[]).push([[986],{2330:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>l});var o=e(4015),s=e.n(o),i=e(3645),a=e.n(i)()(s());a.push([t.id,".user-photo-module{height:300px;max-height:300px;overflow-y:hidden}.user-post-description::-webkit-scrollbar{display:none}.user-post-description{overflow-y:scroll!important;height:300px;max-height:300px}","",{version:3,sources:["webpack://./resources/js/pages/UserPosts.vue"],names:[],mappings:"AAgUA,mBACA,YAAA,CACA,gBAAA,CACA,iBACA,CACA,0CACA,YACA,CACA,uBACA,2BAAA,CACA,YAAA,CACA,gBACA",sourcesContent:['<template>\n    <v-container class="cover">\n        <v-toolbar-title align="center" justify="center" class="mb-2"\n                         v-text="$route.query.mode !== \'me\' ? \'Обращения пользователей\' : \'Ваши обращения\'">\n        </v-toolbar-title>\n        <div v-if="posts.length > 0">\n            <v-layout class="d-flex flex-row flex-wrap">\n\n                <v-flex\n                        xs12\n                        sm6\n                        md6\n                        lg4\n                        v-for="(post, y) in posts" :key="y">\n\n                    <v-card\n                            elevation="0"\n                            outlined\n                            style="position: relative;border: thin solid rgb(57 133 165 / 34%);border-radius:16px"\n                            class="ma-1"\n                    >\n                        <div\n                             class="d-flex crud" style="position:absolute; right: 5px; top: -10px; font-size: 10px">\n\n                            <v-btn\n                                    color="primary"\n                                    fab\n                                    small\n                                    class="mr-3"\n                                    @click="\n                                        post.user_like = post.user_like == 0 ? 1: 0\n                                        post.likes += post.user_like === 1 ? 1 : -1\n                                        like(post)\n                                        "\n                                    dark>\n                                <v-icon>mdi-heart</v-icon>\n                            </v-btn>\n                            <v-btn\n                                    color="primary"\n                                    fab\n                                    small\n                                    class="mr-3"\n                                    dark>\n                                {{post.likes}}\n                            </v-btn>\n                            <v-btn v-if="$store.state.auth.user.id === post.user_id || $store.state.auth.user.role ===1024"\n                                   color="red"\n                                   fab\n                                   small\n                                   @click="delete_id = post.id"\n                                   class="mr-3"\n                                   dark>\n                                <v-icon>mdi-delete</v-icon>\n                            </v-btn>\n                            <v-btn v-if="$store.state.auth.user.id === post.user_id"\n                                   color="yellow"\n                                    fab\n                                    small\n                                    class="mr-3"\n                                    @click="$router.push(\'/user/post/\'+post.id)"\n                                    dark>\n                                <v-icon>mdi-pencil</v-icon>\n                            </v-btn>\n                            <v-btn v-if="$store.state.auth.user.role == 1024 && post.state !== 8"\n                                   color="primary"\n                                   fab\n                                   small\n                                   @click="postToAction = post"\n                                   dark>\n                                <v-icon>mdi-check-outline</v-icon>\n                            </v-btn>\n                            <v-btn v-if="$store.state.auth.user.role != 1024 && post.state == 8 && $store.state.auth.user.id === post.user_id"\n                                   color="success"\n                                   fab\n                                   small\n                                   @click="postToAction = post"\n                                   dark>\n                                <v-icon>mdi-check-outline</v-icon>\n                            </v-btn>\n                        </div>\n\n                        <v-container style="position:relative">\n                            <div v-text="\'Опубликовано: \'+post.date"\n                                 style="position:absolute; left: 5px; bottom: 35px; font-size: 10px"></div>\n                            <div v-text="\'Пользователь: \'+(post.user_id == $store.state.auth.user.id ? \'Вы\' : post.author.full_name)"\n                                 style="position:absolute; left: 5px; bottom: 20px; font-size: 10px"></div>\n                            <div v-text="\'Статус: \'+(statuses[post.state])"\n                                 style="position:absolute; left: 5px; bottom: 5px; font-size: 10px"></div>\n                            <v-toolbar-title\n                                class="text-center mt-2 mb-9"\n                                @click="\n                                    dialogPost = post\n                                    show =  true\n                            ">{{post.title}}</v-toolbar-title>\n                            <v-spacer></v-spacer>\n                        </v-container>\n\n                        <v-container class="ma-0 pa-0"\n                             @click="\n                                dialogPost = post\n                                show =  true\n                        ">\n                            <div v-if="post.photos.length" class="user-photo-module">\n                                <v-carousel>\n                                    <v-carousel-item\n                                            v-for="(photo, i) in post.photos"\n                                            :key="i"\n                                            :src="photo.file"\n                                            contain\n                                            min-heigth="300px"\n                                            max-heigth="300px"\n                                    >\n                                    </v-carousel-item>\n                                </v-carousel>\n                            </div>\n                            <div v-else class="user-post-description">\n                                <v-container v-html="post.description"></v-container>\n                            </div>\n                        </v-container>\n                    </v-card>\n                </v-flex>\n            </v-layout>\n            <div class="text-center xs-12" v-if="l > 1">\n                <v-pagination\n                        :length="l"\n                        :total-visible="3"\n                        v-model="page"\n                ></v-pagination>\n            </div>\n        </div>\n        <div v-else>\n            <div class="text-center my-3">Обращений пока нет</div>\n        </div>\n\n        <v-btn class="save-btn"\n               color="success"\n               fab\n               @click="$router.push(\'/user/post/0\')"\n               dark>\n            <v-icon>mdi-plus</v-icon>\n        </v-btn>\n        <v-dialog\n                v-if="!!dialogPost"\n                v-model="show"\n                @close="\n                    show = false\n                    dialogPost = null\n                "\n                :fullscreen="$vuetify.breakpoint.mobile"\n        >\n            <template slot:default>\n                <v-container class="px-0 mx-0 pt-0 mt-0 cover" style="background-color: white !important; max-width: 100% !important;">\n                    <v-toolbar-title class="text-center my-3">{{dialogPost.title}}</v-toolbar-title>\n\n                    <div v-if="dialogPost.photos && dialogPost.photos.length > 0" class="my-2 container">\n                        <v-carousel>\n                            <v-carousel-item\n                                    v-for="(photo, i) in dialogPost.photos"\n                                    :key="i"\n                                    :src="photo.file"\n                                    contain\n                                    max-height="500px"\n                                    min-height="500px"\n                            >\n                            </v-carousel-item>\n                        </v-carousel>\n                    </div>\n                    <div v-if="dialogPost.comment" v-text="\'Комментарий от администрации: \' + dialogPost.comment"\n                         class="text-center"></div>\n                    <v-container v-html="dialogPost.description"></v-container>\n\n                    <v-toolbar-title class="text-center my-3">\n                        <v-btn color="primary" @click="\n                            show = false\n                            dialogPost = null\n                        ">Закрыть\n                        </v-btn>\n                    </v-toolbar-title>\n\n                </v-container>\n            </template>\n        </v-dialog>\n        <v-dialog\n                v-if="!!postToAction"\n                v-model="postToAction"\n                @close="\n                    postToAction = null\n                "\n                :fullscreen="$vuetify.breakpoint.mobile"\n        >\n            <template slot:default>\n                <v-card>\n\n                    <v-toolbar  class="container py-1 my-0 justify-space-between">\n                        <v-toolbar-title>\n                            <span class="headline">Подтверждение</span>\n                        </v-toolbar-title>\n                        <v-spacer/>\n                        <v-toolbar-title><v-icon\n                                class="flex-grow-0"\n                                text\n                                @click="postToAction = null">X</v-icon>\n                        </v-toolbar-title>\n                    </v-toolbar>\n                    <v-card-text>\n                        <v-container>\n                            <v-col>\n\n                                <v-card-text v-if="postToAction.state === 0">\n                                    Введите коментарий, поясняющий выполнение обращения.\n                                </v-card-text>\n                                <v-card-text v-else>\n                                    Вы действительно хотите подтвердить рассмотрение вашего обращения?\n                                </v-card-text>\n                                <v-form @keyup.native.enter="attemptReset">\n                                    <v-text-field v-if="postToAction.state === 0"\n                                            v-model="comment"\n                                            label="Комментарий"\n                                            :error-messages="commentError"\n                                            name="comment"\n                                            type="text"\n                                            required\n                                    />\n                                    <v-card\n                                            class="d-flex justify-center align-center"\n                                            flat\n                                            height="auto"\n                                            tile\n                                    >\n                                        <v-btn color="dark" @click="accept(postToAction)" :disabled="postToAction.state == 0 && comment == \'\'">\n                                            Подтвердить\n                                        </v-btn>\n                                    </v-card>\n                                </v-form>\n                            </v-col>\n                        </v-container>\n                    </v-card-text>\n                </v-card>\n            </template>\n        </v-dialog>\n    </v-container>\n</template>\n\n<script>\n    export default {\n        name: "UserPosts",\n        data: (vm) => {\n            return {\n                l: 1,\n                posts: [],\n                page: 1,\n                dialogPost: null,\n                delete_id: 0,\n                show: false,\n                postToAction: null,\n                commentDialogShow: false,\n                comment: \'\',\n                commentError: \'\',\n                statuses: {\n                    0: \'Ожидает подтверждения администрацией\',\n                    8: \'Ожидает подтверждения пользователя\',\n                    32: \'Закрыто\',\n                }\n            }\n        },\n        mounted() {\n            this.getPage();\n        },\n        methods: {\n            getPage() {\n                window.axios.get(\'/user/post\', {params: {page: this.page, per_page: 10, mode: this.$route.query.mode}}).then((response) => {\n                    this.posts = [...response.data.data];\n                    this.l = response.data.last_page\n                }).catch((e) => {\n                    console.log(e);\n                });\n            },\n            delete() {\n                if (this.delete_id > 0)\n                    window.axios.delete(\'/user/post/\' + this.delete_id).then((response) => {\n                        this.getPage()\n                        this.delete_id = 0\n                    }).catch((e) => {\n                        console.log(e);\n                    });\n            },\n            accept(post) {\n                let action =  this.postToAction.state == 0 ? \'accept\' : \'confirm\'\n                window.axios.post(\'/user/post/\' + post.id+\'/\'+action, {comment: this.comment}).then((response) => {\n                    this.comment  = \'\';\n                    post.comment = response.data.data.comment;\n                    post.state = response.data.data.state\n                }).catch((e) => {\n                    console.log(e);\n                    if (e?.response?.status=== 422) {\n                        this.commentError = e.response.data.errors.comment;\n                        this.postToAction = post;\n                    }\n                });\n                this.postToAction= null;\n            },\n            like(post) {\n                window.axios.post(\'/user/post/\' + post.id+(post.user_like ? \'/like\' : \'/dislike\')).then((response) => {\n                }).catch((e) => {\n                    console.log(e);\n                });\n            }\n        },\n        watch: {\n            page() {\n                this.getPage();\n            },\n            delete_id(nv) {\n                if (nv > 0) this.delete()\n            }\n        }\n    }\n<\/script>\n\n<style>\n    .user-photo-module{\n        height: 300px;\n        max-height: 300px;\n        overflow-y: hidden;\n    }\n    .user-post-description::-webkit-scrollbar {\n         display: none;\n     }\n    .user-post-description{\n        overflow-y: scroll !important;\n        height: 300px;\n        max-height: 300px;\n    }\n</style>\n'],sourceRoot:""}]);const l=a},9986:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>a});function o(t){return function(t){if(Array.isArray(t))return s(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,n){if(!t)return;if("string"==typeof t)return s(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);"Object"===e&&t.constructor&&(e=t.constructor.name);if("Map"===e||"Set"===e)return Array.from(t);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return s(t,n)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,o=new Array(n);e<n;e++)o[e]=t[e];return o}const i={name:"UserPosts",data:function(t){return{l:1,posts:[],page:1,dialogPost:null,delete_id:0,show:!1,postToAction:null,commentDialogShow:!1,comment:"",commentError:"",statuses:{0:"Ожидает подтверждения администрацией",8:"Ожидает подтверждения пользователя",32:"Закрыто"}}},mounted:function(){this.getPage()},methods:{getPage:function(){var t=this;window.axios.get("/user/post",{params:{page:this.page,per_page:10,mode:this.$route.query.mode}}).then((function(n){t.posts=o(n.data.data),t.l=n.data.last_page})).catch((function(t){console.log(t)}))},delete:function(){var t=this;this.delete_id>0&&window.axios.delete("/user/post/"+this.delete_id).then((function(n){t.getPage(),t.delete_id=0})).catch((function(t){console.log(t)}))},accept:function(t){var n=this,e=0==this.postToAction.state?"accept":"confirm";window.axios.post("/user/post/"+t.id+"/"+e,{comment:this.comment}).then((function(e){n.comment="",t.comment=e.data.data.comment,t.state=e.data.data.state})).catch((function(e){var o;console.log(e),422===(null==e||null===(o=e.response)||void 0===o?void 0:o.status)&&(n.commentError=e.response.data.errors.comment,n.postToAction=t)})),this.postToAction=null},like:function(t){window.axios.post("/user/post/"+t.id+(t.user_like?"/like":"/dislike")).then((function(t){})).catch((function(t){console.log(t)}))}},watch:{page:function(){this.getPage()},delete_id:function(t){t>0&&this.delete()}}};e(4310);const a=(0,e(1900).Z)(i,(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("v-container",{staticClass:"cover"},[e("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:t._s("me"!==t.$route.query.mode?"Обращения пользователей":"Ваши обращения")}}),t._v(" "),t.posts.length>0?e("div",[e("v-layout",{staticClass:"d-flex flex-row flex-wrap"},t._l(t.posts,(function(n,o){return e("v-flex",{key:o,attrs:{xs12:"",sm6:"",md6:"",lg4:""}},[e("v-card",{staticClass:"ma-1",staticStyle:{position:"relative",border:"thin solid rgb(57 133 165 / 34%)","border-radius":"16px"},attrs:{elevation:"0",outlined:""}},[e("div",{staticClass:"d-flex crud",staticStyle:{position:"absolute",right:"5px",top:"-10px","font-size":"10px"}},[e("v-btn",{staticClass:"mr-3",attrs:{color:"primary",fab:"",small:"",dark:""},on:{click:function(e){n.user_like=0==n.user_like?1:0,n.likes+=1===n.user_like?1:-1,t.like(n)}}},[e("v-icon",[t._v("mdi-heart")])],1),t._v(" "),e("v-btn",{staticClass:"mr-3",attrs:{color:"primary",fab:"",small:"",dark:""}},[t._v("\n                            "+t._s(n.likes)+"\n                        ")]),t._v(" "),t.$store.state.auth.user.id===n.user_id||1024===t.$store.state.auth.user.role?e("v-btn",{staticClass:"mr-3",attrs:{color:"red",fab:"",small:"",dark:""},on:{click:function(e){t.delete_id=n.id}}},[e("v-icon",[t._v("mdi-delete")])],1):t._e(),t._v(" "),t.$store.state.auth.user.id===n.user_id?e("v-btn",{staticClass:"mr-3",attrs:{color:"yellow",fab:"",small:"",dark:""},on:{click:function(e){return t.$router.push("/user/post/"+n.id)}}},[e("v-icon",[t._v("mdi-pencil")])],1):t._e(),t._v(" "),1024==t.$store.state.auth.user.role&&8!==n.state?e("v-btn",{attrs:{color:"primary",fab:"",small:"",dark:""},on:{click:function(e){t.postToAction=n}}},[e("v-icon",[t._v("mdi-check-outline")])],1):t._e(),t._v(" "),1024!=t.$store.state.auth.user.role&&8==n.state&&t.$store.state.auth.user.id===n.user_id?e("v-btn",{attrs:{color:"success",fab:"",small:"",dark:""},on:{click:function(e){t.postToAction=n}}},[e("v-icon",[t._v("mdi-check-outline")])],1):t._e()],1),t._v(" "),e("v-container",{staticStyle:{position:"relative"}},[e("div",{staticStyle:{position:"absolute",left:"5px",bottom:"35px","font-size":"10px"},domProps:{textContent:t._s("Опубликовано: "+n.date)}}),t._v(" "),e("div",{staticStyle:{position:"absolute",left:"5px",bottom:"20px","font-size":"10px"},domProps:{textContent:t._s("Пользователь: "+(n.user_id==t.$store.state.auth.user.id?"Вы":n.author.full_name))}}),t._v(" "),e("div",{staticStyle:{position:"absolute",left:"5px",bottom:"5px","font-size":"10px"},domProps:{textContent:t._s("Статус: "+t.statuses[n.state])}}),t._v(" "),e("v-toolbar-title",{staticClass:"text-center mt-2 mb-9",on:{click:function(e){t.dialogPost=n,t.show=!0}}},[t._v(t._s(n.title))]),t._v(" "),e("v-spacer")],1),t._v(" "),e("v-container",{staticClass:"ma-0 pa-0",on:{click:function(e){t.dialogPost=n,t.show=!0}}},[n.photos.length?e("div",{staticClass:"user-photo-module"},[e("v-carousel",t._l(n.photos,(function(t,n){return e("v-carousel-item",{key:n,attrs:{src:t.file,contain:"","min-heigth":"300px","max-heigth":"300px"}})})),1)],1):e("div",{staticClass:"user-post-description"},[e("v-container",{domProps:{innerHTML:t._s(n.description)}})],1)])],1)],1)})),1),t._v(" "),t.l>1?e("div",{staticClass:"text-center xs-12"},[e("v-pagination",{attrs:{length:t.l,"total-visible":3},model:{value:t.page,callback:function(n){t.page=n},expression:"page"}})],1):t._e()],1):e("div",[e("div",{staticClass:"text-center my-3"},[t._v("Обращений пока нет")])]),t._v(" "),e("v-btn",{staticClass:"save-btn",attrs:{color:"success",fab:"",dark:""},on:{click:function(n){return t.$router.push("/user/post/0")}}},[e("v-icon",[t._v("mdi-plus")])],1),t._v(" "),t.dialogPost?e("v-dialog",{attrs:{fullscreen:t.$vuetify.breakpoint.mobile},on:{close:function(n){t.show=!1,t.dialogPost=null}},model:{value:t.show,callback:function(n){t.show=n},expression:"show"}},[[e("v-container",{staticClass:"px-0 mx-0 pt-0 mt-0 cover",staticStyle:{"background-color":"white !important","max-width":"100% !important"}},[e("v-toolbar-title",{staticClass:"text-center my-3"},[t._v(t._s(t.dialogPost.title))]),t._v(" "),t.dialogPost.photos&&t.dialogPost.photos.length>0?e("div",{staticClass:"my-2 container"},[e("v-carousel",t._l(t.dialogPost.photos,(function(t,n){return e("v-carousel-item",{key:n,attrs:{src:t.file,contain:"","max-height":"500px","min-height":"500px"}})})),1)],1):t._e(),t._v(" "),t.dialogPost.comment?e("div",{staticClass:"text-center",domProps:{textContent:t._s("Комментарий от администрации: "+t.dialogPost.comment)}}):t._e(),t._v(" "),e("v-container",{domProps:{innerHTML:t._s(t.dialogPost.description)}}),t._v(" "),e("v-toolbar-title",{staticClass:"text-center my-3"},[e("v-btn",{attrs:{color:"primary"},on:{click:function(n){t.show=!1,t.dialogPost=null}}},[t._v("Закрыть\n                    ")])],1)],1)]],2):t._e(),t._v(" "),t.postToAction?e("v-dialog",{attrs:{fullscreen:t.$vuetify.breakpoint.mobile},on:{close:function(n){t.postToAction=null}},model:{value:t.postToAction,callback:function(n){t.postToAction=n},expression:"postToAction"}},[[e("v-card",[e("v-toolbar",{staticClass:"container py-1 my-0 justify-space-between"},[e("v-toolbar-title",[e("span",{staticClass:"headline"},[t._v("Подтверждение")])]),t._v(" "),e("v-spacer"),t._v(" "),e("v-toolbar-title",[e("v-icon",{staticClass:"flex-grow-0",attrs:{text:""},on:{click:function(n){t.postToAction=null}}},[t._v("X")])],1)],1),t._v(" "),e("v-card-text",[e("v-container",[e("v-col",[0===t.postToAction.state?e("v-card-text",[t._v("\n                                Введите коментарий, поясняющий выполнение обращения.\n                            ")]):e("v-card-text",[t._v("\n                                Вы действительно хотите подтвердить рассмотрение вашего обращения?\n                            ")]),t._v(" "),e("v-form",{nativeOn:{keyup:function(n){return!n.type.indexOf("key")&&t._k(n.keyCode,"enter",13,n.key,"Enter")?null:t.attemptReset.apply(null,arguments)}}},[0===t.postToAction.state?e("v-text-field",{attrs:{label:"Комментарий","error-messages":t.commentError,name:"comment",type:"text",required:""},model:{value:t.comment,callback:function(n){t.comment=n},expression:"comment"}}):t._e(),t._v(" "),e("v-card",{staticClass:"d-flex justify-center align-center",attrs:{flat:"",height:"auto",tile:""}},[e("v-btn",{attrs:{color:"dark",disabled:0==t.postToAction.state&&""==t.comment},on:{click:function(n){return t.accept(t.postToAction)}}},[t._v("\n                                        Подтвердить\n                                    ")])],1)],1)],1)],1)],1)],1)]],2):t._e()],1)}),[],!1,null,null,null).exports},4310:(t,n,e)=>{var o=e(2330);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[t.id,o,""]]),o.locals&&(t.exports=o.locals);(0,e(5346).Z)("1411a9fa",o,!0,{})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(self.webpackChunk=self.webpackChunk||[]).push([[722],{5167:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>p});var n=a(4015),s=a.n(n),o=a(3645),i=a.n(o)()(s());i.push([e.id,"#mapid[data-v-190410e6]{min-height:200px;height:95vh}","",{version:3,sources:["webpack://./resources/js/pages/Map.vue"],names:[],mappings:"AA2BA,wBACA,gBAAA,CACA,WACA",sourcesContent:["<template>\n    <v-container class=\"ma-0 pa-0\">\n        <div id=\"mapid\"></div>\n    </v-container>\n</template>\n\n<script>\n    export default {\n        name: \"Map\",\n        mounted() {\n            var mymap = L.map('mapid').setView([55.536446, 47.498600], 13);\n            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoianVyYTk2IiwiYSI6ImNrcGw1MWVzODFkazQyd284bjY0ZWIxbmIifQ.CWG9L2rMStLO3i3AOgrnyQ', {\n                attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n                maxZoom: 18,\n                id: 'mapbox/streets-v11',\n                tileSize: 512,\n                zoomOffset: -1,\n                accessToken: 'your.mapbox.access.token'\n            }).addTo(mymap);\n        },\n        methods: {\n\n        }\n    }\n<\/script>\n\n<style scoped>\n    #mapid {\n        min-height: 200px;\n        height: 95vh;\n    }\n</style>"],sourceRoot:""}]);const p=i},1722:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>s});const n={name:"Map",mounted:function(){var e=L.map("mapid").setView([55.536446,47.4986],13);L.tileLayer("https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoianVyYTk2IiwiYSI6ImNrcGw1MWVzODFkazQyd284bjY0ZWIxbmIifQ.CWG9L2rMStLO3i3AOgrnyQ",{attribution:'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',maxZoom:18,id:"mapbox/streets-v11",tileSize:512,zoomOffset:-1,accessToken:"your.mapbox.access.token"}).addTo(e)},methods:{}};a(5992);const s=(0,a(1900).Z)(n,(function(){var e=this.$createElement,t=this._self._c||e;return t("v-container",{staticClass:"ma-0 pa-0"},[t("div",{attrs:{id:"mapid"}})])}),[],!1,null,"190410e6",null).exports},5992:(e,t,a)=>{var n=a(5167);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals);(0,a(5346).Z)("ca3dca44",n,!0,{})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
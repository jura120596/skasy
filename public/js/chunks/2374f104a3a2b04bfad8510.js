(self.webpackChunk=self.webpackChunk||[]).push([[237],{8237:(t,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>n});const a={name:"Events",data:function(t){return{l:1,events:[],page:1,dialogPost:null,delete_id:0,show:!1}},mounted:function(){this.getPage()},methods:{getPage:function(){var t=this;window.axios.get("/event/",{params:{page:this.page,per_page:10}}).then((function(e){t.events=e.data.data,t.l=e.data.last_page})).catch((function(t){console.log(t)}))},delete:function(){var t=this;this.delete_id>0&&window.axios.delete("/event/"+this.delete_id).then((function(e){t.getPage(),t.delete_id=0})).catch((function(t){console.log(t)}))}},watch:{page:function(){this.getPage()},delete_id:function(t){t>0&&this.delete()}}};const n=(0,s(1900).Z)(a,(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("v-container",{staticClass:"cover"},[s("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:t._s("Ближайшие мероприятия")}}),t._v(" "),t.events.length>0?s("div",[s("v-container",[s("v-timeline",{attrs:{dense:""}},t._l(t.events,(function(e,a){return s("div",{key:a,staticStyle:{position:"relative"}},[1024===t.$store.state.auth.user.role?s("div",{staticClass:"d-flex crud",staticStyle:{position:"absolute",right:"5px",top:"-10px","font-size":"10px"}},[s("v-btn",{staticClass:"mr-3",attrs:{color:"red",fab:"",small:"",dark:""},on:{click:function(s){t.delete_id=e.id}}},[s("v-icon",[t._v("mdi-delete")])],1)],1):t._e(),t._v(" "),s("v-timeline-item",{attrs:{small:"",left:"",color:"#11a506"}},[s("v-card",{staticClass:"container ma-0 pa-0 d-flex flex-column",attrs:{elevation:"0"}},[s("h4",[t._v(t._s(e.title))]),t._v(" "),s("span",[t._v("Место проведения: "+t._s(e.place))]),t._v(" "),s("span",{staticClass:"text-right history-time",attrs:{title:e.date}},[s("span",[t._v(t._s(e.date))])])])],1)],1)})),0)],1),t._v(" "),t.l>1?s("div",{staticClass:"text-center xs-12"},[s("v-pagination",{attrs:{length:t.l,"total-visible":3},model:{value:t.page,callback:function(e){t.page=e},expression:"page"}})],1):t._e()],1):s("div",[s("div",{staticClass:"text-center my-3"},[t._v("Новостей пока нет")])]),t._v(" "),1024===t.$store.state.auth.user.role?s("v-btn",{staticClass:"save-btn",attrs:{color:"success",fab:"",dark:""},on:{click:function(e){return t.$router.push("/event/0")}}},[s("v-icon",[t._v("mdi-plus")])],1):t._e()],1)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(self.webpackChunk=self.webpackChunk||[]).push([[368],{4368:(t,e,o)=>{"use strict";o.r(e),o.d(e,{default:()=>a});const s={name:"Posts",data:function(t){return{l:1,posts:[],page:1,dialogPost:null,delete_id:0,show:!1}},mounted:function(){this.getPage()},methods:{getPage:function(){var t=this;window.axios.get("/post/",{params:{page:this.page,per_page:10}}).then((function(e){t.posts=e.data.data,t.l=e.data.last_page})).catch((function(t){console.log(t)}))},delete:function(){var t=this;this.delete_id>0&&window.axios.delete("/post/"+this.delete_id).then((function(e){t.getPage(),t.delete_id=0})).catch((function(t){console.log(t)}))}},watch:{page:function(){this.getPage()},delete_id:function(t){t>0&&this.delete()}}};const a=(0,o(1900).Z)(s,(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("v-container",{staticClass:"cover"},[o("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:t._s("Последние новости")}}),t._v(" "),t.posts.length>0?o("div",[o("v-layout",{staticClass:"d-flex flex-row flex-wrap"},t._l(t.posts,(function(e,s){return o("v-flex",{key:s,attrs:{xs12:"",sm6:"",md6:"",lg4:""}},[o("v-card",{staticClass:"ma-1",staticStyle:{position:"relative"},attrs:{elevation:"0",outlined:""}},[1024===t.$store.state.auth.user.role?o("div",{staticClass:"d-flex crud",staticStyle:{position:"absolute",right:"5px",top:"-10px","font-size":"10px"}},[o("v-btn",{staticClass:"mr-3",attrs:{color:"red",fab:"",small:"",dark:""},on:{click:function(o){t.delete_id=e.id}}},[o("v-icon",[t._v("mdi-delete")])],1),t._v(" "),o("v-btn",{attrs:{color:"yellow",fab:"",small:"",dark:""},on:{click:function(o){return t.$router.push("/post/"+e.id)}}},[o("v-icon",[t._v("mdi-pencil")])],1)],1):o("div",{staticStyle:{position:"absolute",right:"5px",top:"5px","font-size":"10px"},domProps:{textContent:t._s("Опубликовано: "+e.date)}}),t._v(" "),o("v-container",[o("v-spacer"),t._v(" "),o("v-toolbar-title",{staticClass:"text-center mt-3 mb-2",on:{click:function(o){t.dialogPost=e,t.show=!0}}},[t._v(t._s(e.title))]),t._v(" "),o("v-spacer")],1),t._v(" "),o("v-container",{staticClass:"ma-0 pa-0",on:{click:function(o){t.dialogPost=e,t.show=!0}}},[e.photos.length?o("div",{staticClass:"user-photo-module"},[o("v-carousel",t._l(e.photos,(function(t,e){return o("v-carousel-item",{key:e,attrs:{src:t.file,contain:""}})})),1)],1):t._e()])],1)],1)})),1),t._v(" "),t.l>1?o("div",{staticClass:"text-center xs-12"},[o("v-pagination",{attrs:{length:t.l,"total-visible":3},model:{value:t.page,callback:function(e){t.page=e},expression:"page"}})],1):t._e()],1):o("div",[o("div",{staticClass:"text-center my-3"},[t._v("Новостей пока нет")])]),t._v(" "),1024===t.$store.state.auth.user.role?o("v-btn",{staticClass:"save-btn",attrs:{color:"success",fab:"",dark:""},on:{click:function(e){return t.$router.push("/post/0")}}},[o("v-icon",[t._v("mdi-plus")])],1):t._e(),t._v(" "),t.dialogPost?o("v-dialog",{attrs:{fullscreen:t.$vuetify.breakpoint.mobile},on:{close:function(e){t.show=!1,t.dialogPost=null}},model:{value:t.show,callback:function(e){t.show=e},expression:"show"}},[[o("v-container",{staticClass:"px-0 mx-0 pt-0 mt-0 cover",staticStyle:{"background-color":"white !important"}},[o("v-toolbar-title",{staticClass:"text-center my-3"},[t._v(t._s(t.dialogPost.title))]),t._v(" "),t.dialogPost.photos&&t.dialogPost.photos.length>0?o("div",{staticClass:"user-photo-module my-2"},[o("v-carousel",t._l(t.dialogPost.photos,(function(t,e){return o("v-carousel-item",{key:e,attrs:{src:t.file,contain:""}})})),1)],1):t._e(),t._v(" "),o("v-container",{domProps:{innerHTML:t._s(t.dialogPost.description)}}),t._v(" "),o("v-toolbar-title",{staticClass:"text-center my-3"},[o("v-btn",{attrs:{color:"primary"},on:{click:function(e){t.show=!1,t.dialogPost=null}}},[t._v("Закрыть\n                    ")])],1)],1)]],2):t._e()],1)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
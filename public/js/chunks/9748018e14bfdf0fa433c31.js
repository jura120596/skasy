(self.webpackChunk=self.webpackChunk||[]).push([[974],{330:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>l});var r=n(4015),s=n.n(r),a=n(3645),o=n.n(a)()(s());o.push([e.id,".place.v-text-field>.v-input__control>.v-input__slot:after,.place.v-text-field>.v-input__control>.v-input__slot:before,.place .v-text-field__slot textarea{display:none!important}","",{version:3,sources:["webpack://./resources/js/pages/TypeEdit.vue"],names:[],mappings:"AAuEA,2JAEA,sBACA",sourcesContent:['<template>\r\n    <v-container\r\n            class="cover">\r\n        <v-toolbar-title align="center" justify="center" class="mb-2"\r\n        v-text="\'Добавление типа заявки\'">\r\n        </v-toolbar-title>\r\n        <v-text-field\r\n            type="text"\r\n            name="title"\r\n            label="Название"\r\n            v-model="model.name"\r\n            :error-messages="messages.name"\r\n            >\r\n        </v-text-field>\r\n        <v-spacer/>\r\n        <v-btn class="save-btn"\r\n               color="success"\r\n               fab\r\n               @click="create"\r\n               :disabled="!(model.name)"\r\n               dark>\r\n            <v-icon>mdi-plus</v-icon>\r\n        </v-btn>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: "PostAdd",\r\n        components: {\r\n        },\r\n        data: (vm) => {\r\n            return {\r\n                model: {\r\n                    id: vm.$route.params.id,\r\n                    name: \'\',\r\n                },\r\n                messages: {\r\n                    name: \'\',\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n        },\r\n        methods: {\r\n            create() {\r\n                window.axios.post(\'/type\', this.model)\r\n                    .then((r) => {\r\n                        this.$store.state.types.push({\r\n                            value: r.data.data.id,\r\n                            text: r.data.data.name\r\n                        })\r\n                        this.$router.push({name: "types"});\r\n                    }).catch((e) => {\r\n                        console.log(e);\r\n                    if (e.response && e.response.status === 422) {\r\n                        let errors = e.response.data.errors\r\n                        Object.keys(this.messages).forEach((k)=> {\r\n                            this.messages[k] = errors[k]?.[0] || \'\';\r\n                        });\r\n                    }\r\n                })\r\n            },\r\n        }\r\n    }\r\n<\/script>\r\n\r\n<style>\r\n    .place .v-text-field__slot textarea {\r\n        display: none !important;\r\n    }\r\n    .place.v-text-field>.v-input__control>.v-input__slot:after ,\r\n    .place.v-text-field>.v-input__control>.v-input__slot:before{\r\n        display: none !important;\r\n    }\r\n</style>'],sourceRoot:""}]);const l=o},7974:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const r={name:"PostAdd",components:{},data:function(e){return{model:{id:e.$route.params.id,name:""},messages:{name:""}}},mounted:function(){},methods:{create:function(){var e=this;window.axios.post("/type",this.model).then((function(t){e.$store.state.types.push({value:t.data.data.id,text:t.data.data.name}),e.$router.push({name:"types"})})).catch((function(t){if(console.log(t),t.response&&422===t.response.status){var n=t.response.data.errors;Object.keys(e.messages).forEach((function(t){var r;e.messages[t]=(null===(r=n[t])||void 0===r?void 0:r[0])||""}))}}))}}};n(8700);const s=(0,n(1900).Z)(r,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("v-container",{staticClass:"cover"},[n("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:e._s("Добавление типа заявки")}}),e._v(" "),n("v-text-field",{attrs:{type:"text",name:"title",label:"Название","error-messages":e.messages.name},model:{value:e.model.name,callback:function(t){e.$set(e.model,"name",t)},expression:"model.name"}}),e._v(" "),n("v-spacer"),e._v(" "),n("v-btn",{staticClass:"save-btn",attrs:{color:"success",fab:"",disabled:!e.model.name,dark:""},on:{click:e.create}},[n("v-icon",[e._v("mdi-plus")])],1)],1)}),[],!1,null,null,null).exports},8700:(e,t,n)=>{var r=n(330);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.id,r,""]]),r.locals&&(e.exports=r.locals);(0,n(5346).Z)("2432e41d",r,!0,{})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
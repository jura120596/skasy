(self.webpackChunk=self.webpackChunk||[]).push([[220],{1220:(t,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>o});const a={name:"Posts",data:function(t){return{l:1,ml:1,requests:[],page:1,mpage:1,dialogModel:null,delete_id:0,show:!1,message:"",messageText:""}},mounted:function(){this.getPage()},methods:{getPage:function(){var t=this;window.axios.get("/request/",{params:{page:this.page,per_page:10,role:"/requests"===this.$route.fullPath?1024:128}}).then((function(e){t.requests=e.data.data,t.l=e.data.last_page})).catch((function(t){console.log(t)}))},delete:function(){var t=this;this.delete_id>0&&window.axios.delete("/request/"+this.delete_id).then((function(e){t.getPage(),t.delete_id=0})).catch((function(t){console.log(t)}))},getMessages:function(){var t=this;window.axios.get("/request/"+this.dialogModel.id+"/messages",{params:{page:this.mpage,per_page:10}}).then((function(e){t.dialogModel.messages=e.data.data,t.ml=e.data.last_page})).catch((function(t){console.log(t)}))},send:function(){var t=this;window.axios.post("/request/"+this.dialogModel.id+"/messages?per_page=10",{text:this.message}).then((function(e){t.dialogModel.messages=e.data.data,t.ml=e.data.last_page,t.message=""})).catch((function(e){console.log(e),e.response&&422===e.response.status&&(t.messageText=e.response.data.errors.text)}))}},watch:{page:function(){this.getPage()},mpage:function(){this.getMessages()},delete_id:function(t){t>0&&this.delete()},show:function(t){t&&this.getMessages()}}};const o=(0,s(1900).Z)(a,(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("v-container",{staticClass:"cover"},[s("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:t._s(1024===t.$store.state.auth.user.role?"Запросы пользователей":"Ваши запросы")}}),t._v(" "),t.requests.length>0?s("div",[s("v-layout",{staticClass:"d-flex flex-row flex-wrap"},t._l(t.requests,(function(e,a){return s("v-flex",{key:a,attrs:{xs12:"",sm6:"",md6:"",lg4:""}},[s("v-card",{staticClass:"ma-1",staticStyle:{position:"relative"},attrs:{elevation:"0",outlined:""}},[t.$store.state.auth.user.id===e.user_id||1024===t.$store.state.auth.user.role?s("div",{staticClass:"d-flex crud",staticStyle:{position:"absolute",right:"5px",top:"-10px","font-size":"10px"}},[s("v-btn",{staticClass:"mr-3",attrs:{color:"red",fab:"",small:"",dark:""},on:{click:function(s){t.delete_id=e.id}}},[s("v-icon",[t._v("mdi-delete")])],1)],1):t._e(),t._v(" "),s("v-container",[s("div",{staticStyle:{position:"absolute",left:"5px",bottom:"20px","font-size":"10px"},domProps:{textContent:t._s("Опубликовано: "+e.date)}}),t._v(" "),s("div",{staticStyle:{position:"absolute",left:"5px",bottom:"5px","font-size":"10px"},domProps:{textContent:t._s("Пользователь: "+(e.user_id==t.$store.state.auth.user.id?"Вы":e.user.full_name))}}),t._v(" "),s("v-spacer"),t._v(" "),s("v-toolbar-title",{staticClass:"text-center mt-2 mb-7",on:{click:function(s){t.dialogModel=e,t.show=!0}}},[t._v(t._s(e.type.name)+"\n                        ")]),t._v(" "),s("v-spacer")],1)],1)],1)})),1),t._v(" "),t.l>1?s("div",{staticClass:"text-center xs-12"},[s("v-pagination",{attrs:{length:t.l,"total-visible":3},model:{value:t.page,callback:function(e){t.page=e},expression:"page"}})],1):t._e()],1):s("div",[s("div",{staticClass:"text-center my-3"},[t._v("Запросов пока нет")])]),t._v(" "),1===t.$store.state.auth.user.role?s("v-btn",{staticClass:"save-btn",attrs:{color:"success",fab:"",dark:""},on:{click:function(e){t.$router.push("/request/0?role="+("/requests"===t.$route.fullPath?1024:128))}}},[s("v-icon",[t._v("mdi-plus")])],1):t._e(),t._v(" "),t.dialogModel?s("v-dialog",{attrs:{fullscreen:t.$vuetify.breakpoint.mobile},on:{close:function(e){t.show=!1,t.dialogModel=null}},model:{value:t.show,callback:function(e){t.show=e},expression:"show"}},[[s("v-container",{staticClass:"px-0 mx-0 pt-0 mt-0 cover",staticStyle:{"background-color":"white !important"}},[s("v-toolbar",{staticClass:"container py-1 my-0 justify-space-between elevation-0"},[s("v-toolbar-title",[s("span",{staticClass:"headline"},[t._v(t._s(t.dialogModel.type.name))])]),t._v(" "),s("v-spacer"),t._v(" "),s("v-toolbar-title",[s("v-icon",{staticClass:"flex-grow-0",attrs:{text:""},on:{click:function(e){t.show=!1,t.dialogModel=null}}},[t._v("X\n                        ")])],1)],1),t._v(" "),s("v-container",{staticStyle:{position:"relative"}},[s("div",{staticStyle:{"font-size":"10px"}},[t._v("\n                        "+t._s("От гражданина: "+(t.dialogModel.user_id==t.$store.state.auth.user.id?"Вы ":t.dialogModel.user.full_name+"  "))+"\n                        "),t.$store.state.auth.user.role>=1024?s("div",[t._v("\n                            ("),s("router-link",{attrs:{to:"/files/"+t.dialogModel.user_id}},[t._v("Файлы пользователя")]),t._v(")\n                        ")],1):t._e()]),t._v(" "),s("div",{staticStyle:{"font-size":"10px"},domProps:{textContent:t._s("Требование:")}}),t._v(" "),s("div",[t._v("\n                        "+t._s(t.dialogModel.text)+"\n                    ")])]),t._v(" "),t.dialogModel.messages&&t.dialogModel.messages.length||t.$store.state.auth.user.role>=128?s("v-container",{staticClass:"ma-0 pa-0"},[t.dialogModel.messages&&t.dialogModel.messages.length>0?s("v-container",{staticClass:"ma-0 pa-0"},[s("div",[s("v-card",[s("v-app-bar",{attrs:{flat:"",color:"rgba(0, 0, 0, 0)"}},[s("v-toolbar-title",{staticClass:"text-h6 white--text pl-0"},[t._v("\n                                        Сообщения\n                                    ")]),t._v(" "),s("v-spacer")],1),t._v(" "),s("v-card-text",[t._l(t.dialogModel.messages,(function(e){return s("div",{staticClass:"d-flex",class:e.user_id===t.$store.state.auth.user.id?"text-right flex-row-reverse":""},[s("div",{key:e.id,staticClass:"rounded pa-1 ma-1",staticStyle:{"background-color":"lightgray",width:"60%"}},[s("div",{staticClass:"font-weight-normal"},[s("strong",{staticStyle:{"font-size":"9px"}},[t._v(t._s(e.date))])]),t._v(" "),s("div",{staticClass:"font-weight-normal"},[s("strong",[t._v(t._s(e.user.full_name))])]),t._v(" "),s("div",[t._v(t._s(e.text))])])])})),t._v(" "),t.ml>1?s("div",{staticClass:"text-center xs-12"},[s("v-pagination",{attrs:{length:t.ml,"total-visible":3},model:{value:t.mpage,callback:function(e){t.mpage=e},expression:"mpage"}})],1):t._e()],2)],1)],1)]):t._e(),t._v(" "),s("v-toolbar",{staticClass:"container pa-0 ma-0 justify-space-between elevation-0"},[s("v-toolbar-title",{staticClass:"ml-3"},[s("v-text-field",{staticClass:"mt-4",attrs:{type:"text",name:"title",label:"Сообщение","error-messages":t.messageText},model:{value:t.message,callback:function(e){t.message=e},expression:"message"}})],1),t._v(" "),s("v-spacer"),t._v(" "),s("v-toolbar-title",{staticClass:"ml-1 mb-3"},[s("v-btn",{staticClass:"rounded",attrs:{disabled:!t.message,color:"primary"}},[s("v-icon",{attrs:{text:""},on:{click:t.send}},[t._v("mdi-check-outline\n                                ")])],1)],1)],1)],1):t._e()],1)]],2):t._e()],1)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcmVzb3VyY2VzL2pzL3BhZ2VzL1JlcXVlc3RzLnZ1ZSIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvUmVxdWVzdHMudnVlPzE3NTYiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL3BhZ2VzL1JlcXVlc3RzLnZ1ZSIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvUmVxdWVzdHMudnVlP2NhYTMiXSwibmFtZXMiOlsiX3ZtIiwidGhpcyIsIl9oIiwiJGNyZWF0ZUVsZW1lbnQiLCJfYyIsIl9zZWxmIiwic3RhdGljQ2xhc3MiLCJhdHRycyIsImRvbVByb3BzIiwiX3MiLCIkc3RvcmUiLCJzdGF0ZSIsImF1dGgiLCJ1c2VyIiwicm9sZSIsIl92IiwicmVxdWVzdHMiLCJsZW5ndGgiLCJfbCIsInJlcSIsInkiLCJrZXkiLCJzdGF0aWNTdHlsZSIsImlkIiwidXNlcl9pZCIsIm9uIiwiJGV2ZW50IiwiZGVsZXRlX2lkIiwiX2UiLCJkYXRlIiwiZnVsbF9uYW1lIiwiZGlhbG9nTW9kZWwiLCJzaG93IiwidHlwZSIsIm5hbWUiLCJsIiwibW9kZWwiLCJ2YWx1ZSIsImNhbGxiYWNrIiwiJCR2IiwicGFnZSIsImV4cHJlc3Npb24iLCIkcm91dGVyIiwicHVzaCIsIiRyb3V0ZSIsImZ1bGxQYXRoIiwiJHZ1ZXRpZnkiLCJicmVha3BvaW50IiwibW9iaWxlIiwidGV4dCIsIm1lc3NhZ2VzIiwibWVzc2FnZSIsImNsYXNzIiwibWwiLCJtcGFnZSIsIm1lc3NhZ2VUZXh0Iiwic2VuZCJdLCJtYXBwaW5ncyI6ImlIQTJNQSxNQzNNbU4sRUQyTW5OLENBQ0UsS0FBRixRQUNFLEtBQUYsWUFDSSxNQUFKLENBQ00sRUFBTixFQUNNLEdBQU4sRUFDTSxTQUFOLEdBQ00sS0FBTixFQUNNLE1BQU4sRUFDTSxZQUFOLEtBQ00sVUFBTixFQUNNLE1BQU4sRUFDTSxRQUFOLEdBQ00sWUFBTixLQUdFLFFBaEJGLFdBaUJJLEtBQUosV0FFRSxRQUFGLENBQ0ksUUFESixXQUNNLElBQU4sT0FDTSxPQUFOLHVCQUFRLE9BQVIsQ0FDVSxLQUFWLFVBQ1UsU0FBVixHQUNVLEtBQVYsK0NBQ0Esa0JBQ1EsRUFBUixxQkFDUSxFQUFSLHNCQU5BLE9BT0EsWUFDUSxRQUFSLFdBVkksT0FBSixXQWFNLElBQU4sT0FDQSxrQkFDQSxrRUFDUSxFQUFSLFVBQ1EsRUFBUixlQUZBLE9BR0EsWUFDUSxRQUFSLFdBR0ksWUF0QkosV0FzQk0sSUFBTixPQUNNLE9BQU4sdURBQ1EsT0FBUixDQUNVLEtBQVYsV0FDVSxTQUFWLE1BRUEsa0JBQ1EsRUFBUixpQ0FDUSxFQUFSLHVCQVBBLE9BUUEsWUFDUSxRQUFSLFdBR0ksS0FuQ0osV0FtQ00sSUFBTixPQUNNLE9BQU4sb0VBQ1EsS0FBUixlQUNBLGtCQUNRLEVBQVIsaUNBQ1EsRUFBUixvQkFDUSxFQUFSLGNBTEEsT0FNQSxZQUNRLFFBQVIsT0FDQSxzQ0FDVSxFQUFWLDhDQUtFLE1BQUYsQ0FDSSxLQURKLFdBRU0sS0FBTixXQUVJLE1BSkosV0FLTSxLQUFOLGVBRUksVUFQSixTQU9BLEdBQ0Esb0JBRUksS0FWSixTQVVBLEdBQ0EsR0FDUSxLQUFSLGlCRTFRQSxTQVhnQixFLFFBQUEsR0FDZCxHQ1JXLFdBQWEsSUFBSUEsRUFBSUMsS0FBU0MsRUFBR0YsRUFBSUcsZUFBbUJDLEVBQUdKLEVBQUlLLE1BQU1ELElBQUlGLEVBQUcsT0FBT0UsRUFBRyxjQUFjLENBQUNFLFlBQVksU0FBUyxDQUFDRixFQUFHLGtCQUFrQixDQUFDRSxZQUFZLE9BQU9DLE1BQU0sQ0FBQyxNQUFRLFNBQVMsUUFBVSxVQUFVQyxTQUFTLENBQUMsWUFBY1IsRUFBSVMsR0FBdUMsT0FBcENULEVBQUlVLE9BQU9DLE1BQU1DLEtBQUtDLEtBQUtDLEtBQWdCLHdCQUEwQixtQkFBbUJkLEVBQUllLEdBQUcsS0FBTWYsRUFBSWdCLFNBQVNDLE9BQVMsRUFBR2IsRUFBRyxNQUFNLENBQUNBLEVBQUcsV0FBVyxDQUFDRSxZQUFZLDZCQUE2Qk4sRUFBSWtCLEdBQUlsQixFQUFZLFVBQUUsU0FBU21CLEVBQUlDLEdBQUcsT0FBT2hCLEVBQUcsU0FBUyxDQUFDaUIsSUFBSUQsRUFBRWIsTUFBTSxDQUFDLEtBQU8sR0FBRyxJQUFNLEdBQUcsSUFBTSxHQUFHLElBQU0sS0FBSyxDQUFDSCxFQUFHLFNBQVMsQ0FBQ0UsWUFBWSxPQUFPZ0IsWUFBWSxDQUFDLFNBQVcsWUFBWWYsTUFBTSxDQUFDLFVBQVksSUFBSSxTQUFXLEtBQUssQ0FBRVAsRUFBSVUsT0FBT0MsTUFBTUMsS0FBS0MsS0FBS1UsS0FBT0osRUFBSUssU0FBK0MsT0FBcEN4QixFQUFJVSxPQUFPQyxNQUFNQyxLQUFLQyxLQUFLQyxLQUFlVixFQUFHLE1BQU0sQ0FBQ0UsWUFBWSxjQUFjZ0IsWUFBWSxDQUFDLFNBQVcsV0FBVyxNQUFRLE1BQU0sSUFBTSxRQUFRLFlBQVksU0FBUyxDQUFDbEIsRUFBRyxRQUFRLENBQUNFLFlBQVksT0FBT0MsTUFBTSxDQUFDLE1BQVEsTUFBTSxJQUFNLEdBQUcsTUFBUSxHQUFHLEtBQU8sSUFBSWtCLEdBQUcsQ0FBQyxNQUFRLFNBQVNDLEdBQVExQixFQUFJMkIsVUFBWVIsRUFBSUksTUFBTSxDQUFDbkIsRUFBRyxTQUFTLENBQUNKLEVBQUllLEdBQUcsaUJBQWlCLElBQUksR0FBR2YsRUFBSTRCLEtBQUs1QixFQUFJZSxHQUFHLEtBQUtYLEVBQUcsY0FBYyxDQUFDQSxFQUFHLE1BQU0sQ0FBQ2tCLFlBQVksQ0FBQyxTQUFXLFdBQVcsS0FBTyxNQUFNLE9BQVMsT0FBTyxZQUFZLFFBQVFkLFNBQVMsQ0FBQyxZQUFjUixFQUFJUyxHQUFHLGlCQUFpQlUsRUFBSVUsU0FBUzdCLEVBQUllLEdBQUcsS0FBS1gsRUFBRyxNQUFNLENBQUNrQixZQUFZLENBQUMsU0FBVyxXQUFXLEtBQU8sTUFBTSxPQUFTLE1BQU0sWUFBWSxRQUFRZCxTQUFTLENBQUMsWUFBY1IsRUFBSVMsR0FBRyxrQkFBa0JVLEVBQUlLLFNBQVd4QixFQUFJVSxPQUFPQyxNQUFNQyxLQUFLQyxLQUFLVSxHQUFLLEtBQU9KLEVBQUlOLEtBQUtpQixlQUFlOUIsRUFBSWUsR0FBRyxLQUFLWCxFQUFHLFlBQVlKLEVBQUllLEdBQUcsS0FBS1gsRUFBRyxrQkFBa0IsQ0FBQ0UsWUFBWSx3QkFBd0JtQixHQUFHLENBQUMsTUFBUSxTQUFTQyxHQUFRMUIsRUFBSStCLFlBQWNaLEVBQzdqRG5CLEVBQUlnQyxNQUFRLEtBQVEsQ0FBQ2hDLEVBQUllLEdBQUdmLEVBQUlTLEdBQUdVLEVBQUljLEtBQUtDLE1BQU0sZ0NBQWdDbEMsRUFBSWUsR0FBRyxLQUFLWCxFQUFHLGFBQWEsSUFBSSxJQUFJLE1BQUssR0FBR0osRUFBSWUsR0FBRyxLQUFNZixFQUFJbUMsRUFBSSxFQUFHL0IsRUFBRyxNQUFNLENBQUNFLFlBQVkscUJBQXFCLENBQUNGLEVBQUcsZUFBZSxDQUFDRyxNQUFNLENBQUMsT0FBU1AsRUFBSW1DLEVBQUUsZ0JBQWdCLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBT3JDLEVBQVEsS0FBRXNDLFNBQVMsU0FBVUMsR0FBTXZDLEVBQUl3QyxLQUFLRCxHQUFLRSxXQUFXLFdBQVcsR0FBR3pDLEVBQUk0QixNQUFNLEdBQUd4QixFQUFHLE1BQU0sQ0FBQ0EsRUFBRyxNQUFNLENBQUNFLFlBQVksb0JBQW9CLENBQUNOLEVBQUllLEdBQUcseUJBQXlCZixFQUFJZSxHQUFHLEtBQTBDLElBQXBDZixFQUFJVSxPQUFPQyxNQUFNQyxLQUFLQyxLQUFLQyxLQUFZVixFQUFHLFFBQVEsQ0FBQ0UsWUFBWSxXQUFXQyxNQUFNLENBQUMsTUFBUSxVQUFVLElBQU0sR0FBRyxLQUFPLElBQUlrQixHQUFHLENBQUMsTUFBUSxTQUFTQyxHQUFRMUIsRUFBSTBDLFFBQVFDLEtBQUssb0JBQThDLGNBQXhCM0MsRUFBSTRDLE9BQU9DLFNBQTJCLEtBQU8sU0FBUyxDQUFDekMsRUFBRyxTQUFTLENBQUNKLEVBQUllLEdBQUcsZUFBZSxHQUFHZixFQUFJNEIsS0FBSzVCLEVBQUllLEdBQUcsS0FBUWYsRUFBSStCLFlBQWEzQixFQUFHLFdBQVcsQ0FBQ0csTUFBTSxDQUFDLFdBQWFQLEVBQUk4QyxTQUFTQyxXQUFXQyxRQUFRdkIsR0FBRyxDQUFDLE1BQVEsU0FBU0MsR0FBUTFCLEVBQUlnQyxNQUFPLEVBQ2o0QmhDLEVBQUkrQixZQUFjLE9BQU9LLE1BQU0sQ0FBQ0MsTUFBT3JDLEVBQVEsS0FBRXNDLFNBQVMsU0FBVUMsR0FBTXZDLEVBQUlnQyxLQUFLTyxHQUFLRSxXQUFXLFNBQVMsQ0FBQyxDQUFDckMsRUFBRyxjQUFjLENBQUNFLFlBQVksNEJBQTRCZ0IsWUFBWSxDQUFDLG1CQUFtQixxQkFBcUIsQ0FBQ2xCLEVBQUcsWUFBWSxDQUFDRSxZQUFZLHlEQUF5RCxDQUFDRixFQUFHLGtCQUFrQixDQUFDQSxFQUFHLE9BQU8sQ0FBQ0UsWUFBWSxZQUFZLENBQUNOLEVBQUllLEdBQUdmLEVBQUlTLEdBQUdULEVBQUkrQixZQUFZRSxLQUFLQyxXQUFXbEMsRUFBSWUsR0FBRyxLQUFLWCxFQUFHLFlBQVlKLEVBQUllLEdBQUcsS0FBS1gsRUFBRyxrQkFBa0IsQ0FBQ0EsRUFBRyxTQUFTLENBQUNFLFlBQVksY0FBY0MsTUFBTSxDQUFDLEtBQU8sSUFBSWtCLEdBQUcsQ0FBQyxNQUFRLFNBQVNDLEdBQVExQixFQUFJZ0MsTUFBTyxFQUM5aUJoQyxFQUFJK0IsWUFBYyxRQUFRLENBQUMvQixFQUFJZSxHQUFHLGtDQUFrQyxJQUFJLEdBQUdmLEVBQUllLEdBQUcsS0FBS1gsRUFBRyxjQUFjLENBQUNrQixZQUFZLENBQUMsU0FBVyxhQUFhLENBQUNsQixFQUFHLE1BQU0sQ0FBQ2tCLFlBQVksQ0FBQyxZQUFZLFNBQVMsQ0FBQ3RCLEVBQUllLEdBQUcsNkJBQTZCZixFQUFJUyxHQUFHLG1CQUFtQlQsRUFBSStCLFlBQVlQLFNBQVd4QixFQUFJVSxPQUFPQyxNQUFNQyxLQUFLQyxLQUFLVSxHQUFLLE1BQVF2QixFQUFJK0IsWUFBWWxCLEtBQUtpQixVQUFZLE9BQU8sOEJBQStCOUIsRUFBSVUsT0FBT0MsTUFBTUMsS0FBS0MsS0FBS0MsTUFBUSxLQUFNVixFQUFHLE1BQU0sQ0FBQ0osRUFBSWUsR0FBRyxtQ0FBbUNYLEVBQUcsY0FBYyxDQUFDRyxNQUFNLENBQUMsR0FBSyxVQUFXUCxFQUFJK0IsWUFBWVAsVUFBVSxDQUFDeEIsRUFBSWUsR0FBRyx3QkFBd0JmLEVBQUllLEdBQUcsZ0NBQWdDLEdBQUdmLEVBQUk0QixPQUFPNUIsRUFBSWUsR0FBRyxLQUFLWCxFQUFHLE1BQU0sQ0FBQ2tCLFlBQVksQ0FBQyxZQUFZLFFBQVFkLFNBQVMsQ0FBQyxZQUFjUixFQUFJUyxHQUFHLGtCQUFrQlQsRUFBSWUsR0FBRyxLQUFLWCxFQUFHLE1BQU0sQ0FBQ0osRUFBSWUsR0FBRyw2QkFBNkJmLEVBQUlTLEdBQUdULEVBQUkrQixZQUFZa0IsTUFBTSw4QkFBOEJqRCxFQUFJZSxHQUFHLEtBQU1mLEVBQUkrQixZQUFZbUIsVUFBWWxELEVBQUkrQixZQUFZbUIsU0FBU2pDLFFBQVVqQixFQUFJVSxPQUFPQyxNQUFNQyxLQUFLQyxLQUFLQyxNQUFRLElBQUtWLEVBQUcsY0FBYyxDQUFDRSxZQUFZLGFBQWEsQ0FBRU4sRUFBSStCLFlBQVltQixVQUFZbEQsRUFBSStCLFlBQVltQixTQUFTakMsT0FBTyxFQUFHYixFQUFHLGNBQWMsQ0FBQ0UsWUFBWSxhQUFhLENBQUNGLEVBQUcsTUFBTSxDQUFDQSxFQUFHLFNBQVMsQ0FBQ0EsRUFBRyxZQUFZLENBQUNHLE1BQU0sQ0FBQyxLQUFPLEdBQUcsTUFBUSxxQkFBcUIsQ0FBQ0gsRUFBRyxrQkFBa0IsQ0FBQ0UsWUFBWSw0QkFBNEIsQ0FBQ04sRUFBSWUsR0FBRywrRkFBK0ZmLEVBQUllLEdBQUcsS0FBS1gsRUFBRyxhQUFhLEdBQUdKLEVBQUllLEdBQUcsS0FBS1gsRUFBRyxjQUFjLENBQUNKLEVBQUlrQixHQUFJbEIsRUFBSStCLFlBQW9CLFVBQUUsU0FBU29CLEdBQVMsT0FBTy9DLEVBQUcsTUFBTSxDQUFDRSxZQUFZLFNBQVM4QyxNQUFNRCxFQUFRM0IsVUFBWXhCLEVBQUlVLE9BQU9DLE1BQU1DLEtBQUtDLEtBQUtVLEdBQUssOEJBQWdDLElBQUksQ0FBQ25CLEVBQUcsTUFBTSxDQUFDaUIsSUFBSThCLEVBQVE1QixHQUFHakIsWUFBWSxvQkFBb0JnQixZQUFZLENBQUMsbUJBQW1CLFlBQVksTUFBUSxRQUFRLENBQUNsQixFQUFHLE1BQU0sQ0FBQ0UsWUFBWSxzQkFBc0IsQ0FBQ0YsRUFBRyxTQUFTLENBQUNrQixZQUFZLENBQUMsWUFBWSxRQUFRLENBQUN0QixFQUFJZSxHQUFHZixFQUFJUyxHQUFHMEMsRUFBUXRCLFdBQVc3QixFQUFJZSxHQUFHLEtBQUtYLEVBQUcsTUFBTSxDQUFDRSxZQUFZLHNCQUFzQixDQUFDRixFQUFHLFNBQVMsQ0FBQ0osRUFBSWUsR0FBR2YsRUFBSVMsR0FBRzBDLEVBQVF0QyxLQUFLaUIsZ0JBQWdCOUIsRUFBSWUsR0FBRyxLQUFLWCxFQUFHLE1BQU0sQ0FBQ0osRUFBSWUsR0FBR2YsRUFBSVMsR0FBRzBDLEVBQVFGLGdCQUFlakQsRUFBSWUsR0FBRyxLQUFNZixFQUFJcUQsR0FBSyxFQUFHakQsRUFBRyxNQUFNLENBQUNFLFlBQVkscUJBQXFCLENBQUNGLEVBQUcsZUFBZSxDQUFDRyxNQUFNLENBQUMsT0FBU1AsRUFBSXFELEdBQUcsZ0JBQWdCLEdBQUdqQixNQUFNLENBQUNDLE1BQU9yQyxFQUFTLE1BQUVzQyxTQUFTLFNBQVVDLEdBQU12QyxFQUFJc0QsTUFBTWYsR0FBS0UsV0FBVyxZQUFZLEdBQUd6QyxFQUFJNEIsTUFBTSxJQUFJLElBQUksS0FBSzVCLEVBQUk0QixLQUFLNUIsRUFBSWUsR0FBRyxLQUFLWCxFQUFHLFlBQVksQ0FBQ0UsWUFBWSx5REFBeUQsQ0FBQ0YsRUFBRyxrQkFBa0IsQ0FBQ0UsWUFBWSxRQUFRLENBQUNGLEVBQUcsZUFBZSxDQUFDRSxZQUFZLE9BQU9DLE1BQU0sQ0FBQyxLQUFPLE9BQU8sS0FBTyxRQUFRLE1BQVEsWUFBWSxpQkFBaUJQLEVBQUl1RCxhQUFhbkIsTUFBTSxDQUFDQyxNQUFPckMsRUFBVyxRQUFFc0MsU0FBUyxTQUFVQyxHQUFNdkMsRUFBSW1ELFFBQVFaLEdBQUtFLFdBQVcsY0FBYyxHQUFHekMsRUFBSWUsR0FBRyxLQUFLWCxFQUFHLFlBQVlKLEVBQUllLEdBQUcsS0FBS1gsRUFBRyxrQkFBa0IsQ0FBQ0UsWUFBWSxhQUFhLENBQUNGLEVBQUcsUUFBUSxDQUFDRSxZQUFZLFVBQVVDLE1BQU0sQ0FBQyxVQUFZUCxFQUFJbUQsUUFBUSxNQUFRLFlBQVksQ0FBQy9DLEVBQUcsU0FBUyxDQUFDRyxNQUFNLENBQUMsS0FBTyxJQUFJa0IsR0FBRyxDQUFDLE1BQVF6QixFQUFJd0QsT0FBTyxDQUFDeEQsRUFBSWUsR0FBRywwREFBMEQsSUFBSSxJQUFJLElBQUksR0FBR2YsRUFBSTRCLE1BQU0sS0FBSyxHQUFHNUIsRUFBSTRCLE1BQU0sS0FDbjdGLElET3BCLEVBQ0EsS0FDQSxLQUNBLE0iLCJmaWxlIjoianMvY2h1bmtzLzIyMDM5NzYwOWE1OTYwMGU2MzQ0M2MyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxuICAgIDx2LWNvbnRhaW5lciBjbGFzcz1cImNvdmVyXCI+XG4gICAgICAgIDx2LXRvb2xiYXItdGl0bGUgYWxpZ249XCJjZW50ZXJcIiBqdXN0aWZ5PVwiY2VudGVyXCIgY2xhc3M9XCJtYi0yXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICB2LXRleHQ9XCIkc3RvcmUuc3RhdGUuYXV0aC51c2VyLnJvbGUgPT09IDEwMjQgPyAn0JfQsNC/0YDQvtGB0Ysg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10LknIDogJ9CS0LDRiNC4INC30LDQv9GA0L7RgdGLJ1wiPlxuICAgICAgICA8L3YtdG9vbGJhci10aXRsZT5cbiAgICAgICAgPGRpdiB2LWlmPVwicmVxdWVzdHMubGVuZ3RoID4gMFwiPlxuICAgICAgICAgICAgPHYtbGF5b3V0IGNsYXNzPVwiZC1mbGV4IGZsZXgtcm93IGZsZXgtd3JhcFwiPlxuXG4gICAgICAgICAgICAgICAgPHYtZmxleFxuICAgICAgICAgICAgICAgICAgICAgICAgeHMxMlxuICAgICAgICAgICAgICAgICAgICAgICAgc202XG4gICAgICAgICAgICAgICAgICAgICAgICBtZDZcbiAgICAgICAgICAgICAgICAgICAgICAgIGxnNFxuICAgICAgICAgICAgICAgICAgICAgICAgdi1mb3I9XCIocmVxLCB5KSBpbiByZXF1ZXN0c1wiIDprZXk9XCJ5XCI+XG5cbiAgICAgICAgICAgICAgICAgICAgPHYtY2FyZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZXZhdGlvbj1cIjBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dGxpbmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9XCJwb3NpdGlvbjogcmVsYXRpdmU7XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cIm1hLTFcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9XCIkc3RvcmUuc3RhdGUuYXV0aC51c2VyLmlkID09PSByZXEudXNlcl9pZCB8fCAkc3RvcmUuc3RhdGUuYXV0aC51c2VyLnJvbGUgPT09IDEwMjRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImQtZmxleCBjcnVkXCIgc3R5bGU9XCJwb3NpdGlvbjphYnNvbHV0ZTsgcmlnaHQ6IDVweDsgdG9wOiAtMTBweDsgZm9udC1zaXplOiAxMHB4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNvbG9yPVwicmVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz1cImRlbGV0ZV9pZCA9IHJlcS5pZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwibXItM1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhcms+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWljb24+bWRpLWRlbGV0ZTwvdi1pY29uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtY29udGFpbmVyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi10ZXh0PVwiJ9Ce0L/Rg9Cx0LvQuNC60L7QstCw0L3QvjogJytyZXEuZGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT1cInBvc2l0aW9uOmFic29sdXRlOyBsZWZ0OiA1cHg7IGJvdHRvbTogMjBweDsgZm9udC1zaXplOiAxMHB4XCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LXRleHQ9XCIn0J/QvtC70YzQt9C+0LLQsNGC0LXQu9GMOiAnKyhyZXEudXNlcl9pZCA9PSAkc3RvcmUuc3RhdGUuYXV0aC51c2VyLmlkID8gJ9CS0YsnIDogcmVxLnVzZXIuZnVsbF9uYW1lKVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT1cInBvc2l0aW9uOmFic29sdXRlOyBsZWZ0OiA1cHg7IGJvdHRvbTogNXB4OyBmb250LXNpemU6IDEwcHhcIj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zcGFjZXI+PC92LXNwYWNlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10b29sYmFyLXRpdGxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInRleHQtY2VudGVyIG10LTIgbWItN1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpYWxvZ01vZGVsID0gcmVxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93ID0gIHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIj57e3JlcS50eXBlLm5hbWV9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi10b29sYmFyLXRpdGxlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICAgICAgPC92LWNhcmQ+XG4gICAgICAgICAgICAgICAgPC92LWZsZXg+XG4gICAgICAgICAgICA8L3YtbGF5b3V0PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyIHhzLTEyXCIgdi1pZj1cImwgPiAxXCI+XG4gICAgICAgICAgICAgICAgPHYtcGFnaW5hdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgOmxlbmd0aD1cImxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOnRvdGFsLXZpc2libGU9XCIzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJwYWdlXCJcbiAgICAgICAgICAgICAgICA+PC92LXBhZ2luYXRpb24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgdi1lbHNlPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyIG15LTNcIj7Ql9Cw0L/RgNC+0YHQvtCyINC/0L7QutCwINC90LXRgjwvZGl2PlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8di1idG4gY2xhc3M9XCJzYXZlLWJ0blwiXG4gICAgICAgICAgICAgICB2LWlmPVwiJHN0b3JlLnN0YXRlLmF1dGgudXNlci5yb2xlID09PSAxXCJcbiAgICAgICAgICAgICAgIGNvbG9yPVwic3VjY2Vzc1wiXG4gICAgICAgICAgICAgICBmYWJcbiAgICAgICAgICAgICAgIEBjbGljaz1cIiRyb3V0ZXIucHVzaCgnL3JlcXVlc3QvMD9yb2xlPScgKyAoJHJvdXRlLmZ1bGxQYXRoID09PSAnL3JlcXVlc3RzJyA/IDEwMjQgOiAxMjgpKVwiXG4gICAgICAgICAgICAgICBkYXJrPlxuICAgICAgICAgICAgPHYtaWNvbj5tZGktcGx1czwvdi1pY29uPlxuICAgICAgICA8L3YtYnRuPlxuICAgICAgICA8di1kaWFsb2dcbiAgICAgICAgICAgICAgICB2LWlmPVwiISFkaWFsb2dNb2RlbFwiXG4gICAgICAgICAgICAgICAgdi1tb2RlbD1cInNob3dcIlxuICAgICAgICAgICAgICAgIEBjbG9zZT1cIlxuICAgICAgICAgICAgICAgICAgICBzaG93ID0gZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgZGlhbG9nTW9kZWwgPSBudWxsXG4gICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICA6ZnVsbHNjcmVlbj1cIiR2dWV0aWZ5LmJyZWFrcG9pbnQubW9iaWxlXCJcbiAgICAgICAgPlxuICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q6ZGVmYXVsdD5cbiAgICAgICAgICAgICAgICA8di1jb250YWluZXIgY2xhc3M9XCJweC0wIG14LTAgcHQtMCBtdC0wIGNvdmVyXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1wiPlxuXG4gICAgICAgICAgICAgICAgICAgIDx2LXRvb2xiYXIgY2xhc3M9XCJjb250YWluZXIgcHktMSBteS0wIGp1c3RpZnktc3BhY2UtYmV0d2VlbiBlbGV2YXRpb24tMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtdG9vbGJhci10aXRsZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImhlYWRsaW5lXCI+e3tkaWFsb2dNb2RlbC50eXBlLm5hbWV9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi10b29sYmFyLXRpdGxlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtc3BhY2VyLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRvb2xiYXItdGl0bGU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtaWNvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJmbGV4LWdyb3ctMFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdyA9IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpYWxvZ01vZGVsID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICBcIj5YXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWljb24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3YtdG9vbGJhci10aXRsZT5cbiAgICAgICAgICAgICAgICAgICAgPC92LXRvb2xiYXI+XG5cbiAgICAgICAgICAgICAgICAgICAgPHYtY29udGFpbmVyIHN0eWxlPVwicG9zaXRpb246cmVsYXRpdmU7XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPVwiZm9udC1zaXplOiAxMHB4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3sn0J7RgiDQs9GA0LDQttC00LDQvdC40L3QsDogJysoZGlhbG9nTW9kZWwudXNlcl9pZCA9PSAkc3RvcmUuc3RhdGUuYXV0aC51c2VyLmlkID8gJ9CS0YsgJyA6IGRpYWxvZ01vZGVsLnVzZXIuZnVsbF9uYW1lICsgJyAgJyl9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIHYtaWY9XCIkc3RvcmUuc3RhdGUuYXV0aC51c2VyLnJvbGUgPj0gMTAyNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoPHJvdXRlci1saW5rIDp0bz1cIicvZmlsZXMvJysgZGlhbG9nTW9kZWwudXNlcl9pZFwiPtCk0LDQudC70Ysg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPPC9yb3V0ZXItbGluaz4pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi10ZXh0PVwiJ9Ci0YDQtdCx0L7QstCw0L3QuNC1OidcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT1cImZvbnQtc2l6ZTogMTBweFwiPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e2RpYWxvZ01vZGVsLnRleHR9fVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvdi1jb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDx2LWNvbnRhaW5lclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9XCJkaWFsb2dNb2RlbC5tZXNzYWdlcyAmJiBkaWFsb2dNb2RlbC5tZXNzYWdlcy5sZW5ndGggfHwgJHN0b3JlLnN0YXRlLmF1dGgudXNlci5yb2xlID49IDEyOFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJtYS0wIHBhLTBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbnRhaW5lciBjbGFzcz1cIm1hLTAgcGEtMFwiIHYtaWY9XCJkaWFsb2dNb2RlbC5tZXNzYWdlcyAmJiBkaWFsb2dNb2RlbC5tZXNzYWdlcy5sZW5ndGg+MFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2FyZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWFwcC1iYXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxhdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcj1cInJnYmEoMCwgMCwgMCwgMClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdG9vbGJhci10aXRsZSBjbGFzcz1cInRleHQtaDYgd2hpdGUtLXRleHQgcGwtMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDQodC+0L7QsdGJ0LXQvdC40Y9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtdG9vbGJhci10aXRsZT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYXBwLWJhcj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2FyZC10ZXh0PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1mb3I9XCJtZXNzYWdlIGluIGRpYWxvZ01vZGVsLm1lc3NhZ2VzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZC1mbGV4XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpjbGFzcz1cIm1lc3NhZ2UudXNlcl9pZCA9PT0gJHN0b3JlLnN0YXRlLmF1dGgudXNlci5pZCA/ICd0ZXh0LXJpZ2h0IGZsZXgtcm93LXJldmVyc2UnIDogJydcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdW5kZWQgcGEtMSBtYS0xXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTsgd2lkdGg6IDYwJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmtleT1cIm1lc3NhZ2UuaWRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb250LXdlaWdodC1ub3JtYWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIHN0eWxlPVwiZm9udC1zaXplOiA5cHhcIj57eyBtZXNzYWdlLmRhdGUgfX08L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvbnQtd2VpZ2h0LW5vcm1hbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+e3sgbWVzc2FnZS51c2VyLmZ1bGxfbmFtZSB9fTwvc3Ryb25nPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pnt7IG1lc3NhZ2UudGV4dCB9fTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlciB4cy0xMlwiIHYtaWY9XCJtbCA+IDFcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtcGFnaW5hdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpsZW5ndGg9XCJtbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnRvdGFsLXZpc2libGU9XCIzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwibXBhZ2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92LXBhZ2luYXRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2FyZC10ZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2FyZD5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNvbnRhaW5lcj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPHYtdG9vbGJhciBjbGFzcz1cImNvbnRhaW5lciBwYS0wIG1hLTAganVzdGlmeS1zcGFjZS1iZXR3ZWVuIGVsZXZhdGlvbi0wXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdG9vbGJhci10aXRsZSBjbGFzcz1cIm1sLTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwidGl0bGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPVwi0KHQvtC+0LHRidC10L3QuNC1XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cIm10LTRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJtZXNzYWdlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ZXJyb3ItbWVzc2FnZXM9XCJtZXNzYWdlVGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LXRleHQtZmllbGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LXRvb2xiYXItdGl0bGU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtc3BhY2VyLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10b29sYmFyLXRpdGxlIGNsYXNzPVwibWwtMSBtYi0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0blxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicm91bmRlZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmRpc2FibGVkPVwiIW1lc3NhZ2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPVwicHJpbWFyeVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtaWNvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI+bWRpLWNoZWNrLW91dGxpbmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1pY29uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi10b29sYmFyLXRpdGxlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC92LXRvb2xiYXI+XG5cbiAgICAgICAgICAgICAgICAgICAgPC92LWNvbnRhaW5lcj5cblxuICAgICAgICAgICAgICAgIDwvdi1jb250YWluZXI+XG4gICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICA8L3YtZGlhbG9nPlxuICAgIDwvdi1jb250YWluZXI+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuICAgIGV4cG9ydCBkZWZhdWx0IHtcbiAgICAgICAgbmFtZTogXCJQb3N0c1wiLFxuICAgICAgICBkYXRhOiAodm0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbDogMSxcbiAgICAgICAgICAgICAgICBtbDogMSxcbiAgICAgICAgICAgICAgICByZXF1ZXN0czogW10sXG4gICAgICAgICAgICAgICAgcGFnZTogMSxcbiAgICAgICAgICAgICAgICBtcGFnZTogMSxcbiAgICAgICAgICAgICAgICBkaWFsb2dNb2RlbDogbnVsbCxcbiAgICAgICAgICAgICAgICBkZWxldGVfaWQ6IDAsXG4gICAgICAgICAgICAgICAgc2hvdzogZmFsc2UsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJycsXG4gICAgICAgICAgICAgICAgbWVzc2FnZVRleHQ6ICcnLFxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBtb3VudGVkKCkge1xuICAgICAgICAgICAgdGhpcy5nZXRQYWdlKCk7XG4gICAgICAgIH0sXG4gICAgICAgIG1ldGhvZHM6IHtcbiAgICAgICAgICAgIGdldFBhZ2UoKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmF4aW9zLmdldCgnL3JlcXVlc3QvJywge3BhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICBwYWdlOiB0aGlzLnBhZ2UsXG4gICAgICAgICAgICAgICAgICAgIHBlcl9wYWdlOiAxMCxcbiAgICAgICAgICAgICAgICAgICAgcm9sZTogdGhpcy4kcm91dGUuZnVsbFBhdGggPT09ICcvcmVxdWVzdHMnID8gMTAyNCA6IDEyOCxcbiAgICAgICAgICAgICAgICB9fSkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0cyA9IHJlc3BvbnNlLmRhdGEuZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sID0gcmVzcG9uc2UuZGF0YS5sYXN0X3BhZ2VcbiAgICAgICAgICAgICAgICB9KS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZWxldGUoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZGVsZXRlX2lkID4gMClcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmF4aW9zLmRlbGV0ZSgnL3JlcXVlc3QvJyArIHRoaXMuZGVsZXRlX2lkKS50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRQYWdlKClcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGVsZXRlX2lkID0gMFxuICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldE1lc3NhZ2VzKCkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5heGlvcy5nZXQoJy9yZXF1ZXN0LycgKyB0aGlzLmRpYWxvZ01vZGVsLmlkICsgJy9tZXNzYWdlcycsIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWdlOiB0aGlzLm1wYWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGVyX3BhZ2U6IDEwLFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSkudGhlbigocikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZ01vZGVsLm1lc3NhZ2VzID0gci5kYXRhLmRhdGFcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tbCA9IHIuZGF0YS5sYXN0X3BhZ2VcbiAgICAgICAgICAgICAgICB9KS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VuZCgpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cuYXhpb3MucG9zdCgnL3JlcXVlc3QvJyArIHRoaXMuZGlhbG9nTW9kZWwuaWQgKyAnL21lc3NhZ2VzP3Blcl9wYWdlPTEwJywge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0OiB0aGlzLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgfSkudGhlbigocikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZ01vZGVsLm1lc3NhZ2VzID0gci5kYXRhLmRhdGFcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tbCA9IHIuZGF0YS5sYXN0X3BhZ2VcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gJyc7XG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSlcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUucmVzcG9uc2UgJiYgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQyMikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlVGV4dCA9IGUucmVzcG9uc2UuZGF0YS5lcnJvcnMudGV4dFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgd2F0Y2g6IHtcbiAgICAgICAgICAgIHBhZ2UoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXRQYWdlKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbXBhZ2UoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXRNZXNzYWdlcygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlbGV0ZV9pZChudikge1xuICAgICAgICAgICAgICAgIGlmIChudiA+IDApIHRoaXMuZGVsZXRlKClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaG93KG52KSB7XG4gICAgICAgICAgICAgICAgaWYgKG52KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0TWVzc2FnZXMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuPC9zdHlsZT4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9jbG9uZWRSdWxlU2V0LTVbMF0ucnVsZXNbMF0udXNlWzBdIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vUmVxdWVzdHMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9jbG9uZWRSdWxlU2V0LTVbMF0ucnVsZXNbMF0udXNlWzBdIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vUmVxdWVzdHMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9SZXF1ZXN0cy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NWMwM2M4MzkmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vUmVxdWVzdHMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9SZXF1ZXN0cy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCd2LWNvbnRhaW5lcicse3N0YXRpY0NsYXNzOlwiY292ZXJcIn0sW19jKCd2LXRvb2xiYXItdGl0bGUnLHtzdGF0aWNDbGFzczpcIm1iLTJcIixhdHRyczp7XCJhbGlnblwiOlwiY2VudGVyXCIsXCJqdXN0aWZ5XCI6XCJjZW50ZXJcIn0sZG9tUHJvcHM6e1widGV4dENvbnRlbnRcIjpfdm0uX3MoX3ZtLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXIucm9sZSA9PT0gMTAyNCA/ICfQl9Cw0L/RgNC+0YHRiyDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuScgOiAn0JLQsNGI0Lgg0LfQsNC/0YDQvtGB0YsnKX19KSxfdm0uX3YoXCIgXCIpLChfdm0ucmVxdWVzdHMubGVuZ3RoID4gMCk/X2MoJ2RpdicsW19jKCd2LWxheW91dCcse3N0YXRpY0NsYXNzOlwiZC1mbGV4IGZsZXgtcm93IGZsZXgtd3JhcFwifSxfdm0uX2woKF92bS5yZXF1ZXN0cyksZnVuY3Rpb24ocmVxLHkpe3JldHVybiBfYygndi1mbGV4Jyx7a2V5OnksYXR0cnM6e1wieHMxMlwiOlwiXCIsXCJzbTZcIjpcIlwiLFwibWQ2XCI6XCJcIixcImxnNFwiOlwiXCJ9fSxbX2MoJ3YtY2FyZCcse3N0YXRpY0NsYXNzOlwibWEtMVwiLHN0YXRpY1N0eWxlOntcInBvc2l0aW9uXCI6XCJyZWxhdGl2ZVwifSxhdHRyczp7XCJlbGV2YXRpb25cIjpcIjBcIixcIm91dGxpbmVkXCI6XCJcIn19LFsoX3ZtLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXIuaWQgPT09IHJlcS51c2VyX2lkIHx8IF92bS4kc3RvcmUuc3RhdGUuYXV0aC51c2VyLnJvbGUgPT09IDEwMjQpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImQtZmxleCBjcnVkXCIsc3RhdGljU3R5bGU6e1wicG9zaXRpb25cIjpcImFic29sdXRlXCIsXCJyaWdodFwiOlwiNXB4XCIsXCJ0b3BcIjpcIi0xMHB4XCIsXCJmb250LXNpemVcIjpcIjEwcHhcIn19LFtfYygndi1idG4nLHtzdGF0aWNDbGFzczpcIm1yLTNcIixhdHRyczp7XCJjb2xvclwiOlwicmVkXCIsXCJmYWJcIjpcIlwiLFwic21hbGxcIjpcIlwiLFwiZGFya1wiOlwiXCJ9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uZGVsZXRlX2lkID0gcmVxLmlkfX19LFtfYygndi1pY29uJyxbX3ZtLl92KFwibWRpLWRlbGV0ZVwiKV0pXSwxKV0sMSk6X3ZtLl9lKCksX3ZtLl92KFwiIFwiKSxfYygndi1jb250YWluZXInLFtfYygnZGl2Jyx7c3RhdGljU3R5bGU6e1wicG9zaXRpb25cIjpcImFic29sdXRlXCIsXCJsZWZ0XCI6XCI1cHhcIixcImJvdHRvbVwiOlwiMjBweFwiLFwiZm9udC1zaXplXCI6XCIxMHB4XCJ9LGRvbVByb3BzOntcInRleHRDb250ZW50XCI6X3ZtLl9zKCfQntC/0YPQsdC70LjQutC+0LLQsNC90L46ICcrcmVxLmRhdGUpfX0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY1N0eWxlOntcInBvc2l0aW9uXCI6XCJhYnNvbHV0ZVwiLFwibGVmdFwiOlwiNXB4XCIsXCJib3R0b21cIjpcIjVweFwiLFwiZm9udC1zaXplXCI6XCIxMHB4XCJ9LGRvbVByb3BzOntcInRleHRDb250ZW50XCI6X3ZtLl9zKCfQn9C+0LvRjNC30L7QstCw0YLQtdC70Yw6ICcrKHJlcS51c2VyX2lkID09IF92bS4kc3RvcmUuc3RhdGUuYXV0aC51c2VyLmlkID8gJ9CS0YsnIDogcmVxLnVzZXIuZnVsbF9uYW1lKSl9fSksX3ZtLl92KFwiIFwiKSxfYygndi1zcGFjZXInKSxfdm0uX3YoXCIgXCIpLF9jKCd2LXRvb2xiYXItdGl0bGUnLHtzdGF0aWNDbGFzczpcInRleHQtY2VudGVyIG10LTIgbWItN1wiLG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uZGlhbG9nTW9kZWwgPSByZXFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnNob3cgPSAgdHJ1ZX19fSxbX3ZtLl92KF92bS5fcyhyZXEudHlwZS5uYW1lKStcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiKV0pLF92bS5fdihcIiBcIiksX2MoJ3Ytc3BhY2VyJyldLDEpXSwxKV0sMSl9KSwxKSxfdm0uX3YoXCIgXCIpLChfdm0ubCA+IDEpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInRleHQtY2VudGVyIHhzLTEyXCJ9LFtfYygndi1wYWdpbmF0aW9uJyx7YXR0cnM6e1wibGVuZ3RoXCI6X3ZtLmwsXCJ0b3RhbC12aXNpYmxlXCI6M30sbW9kZWw6e3ZhbHVlOihfdm0ucGFnZSksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS5wYWdlPSQkdn0sZXhwcmVzc2lvbjpcInBhZ2VcIn19KV0sMSk6X3ZtLl9lKCldLDEpOl9jKCdkaXYnLFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ0ZXh0LWNlbnRlciBteS0zXCJ9LFtfdm0uX3YoXCLQl9Cw0L/RgNC+0YHQvtCyINC/0L7QutCwINC90LXRglwiKV0pXSksX3ZtLl92KFwiIFwiKSwoX3ZtLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXIucm9sZSA9PT0gMSk/X2MoJ3YtYnRuJyx7c3RhdGljQ2xhc3M6XCJzYXZlLWJ0blwiLGF0dHJzOntcImNvbG9yXCI6XCJzdWNjZXNzXCIsXCJmYWJcIjpcIlwiLFwiZGFya1wiOlwiXCJ9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uJHJvdXRlci5wdXNoKCcvcmVxdWVzdC8wP3JvbGU9JyArIChfdm0uJHJvdXRlLmZ1bGxQYXRoID09PSAnL3JlcXVlc3RzJyA/IDEwMjQgOiAxMjgpKX19fSxbX2MoJ3YtaWNvbicsW192bS5fdihcIm1kaS1wbHVzXCIpXSldLDEpOl92bS5fZSgpLF92bS5fdihcIiBcIiksKCEhX3ZtLmRpYWxvZ01vZGVsKT9fYygndi1kaWFsb2cnLHthdHRyczp7XCJmdWxsc2NyZWVuXCI6X3ZtLiR2dWV0aWZ5LmJyZWFrcG9pbnQubW9iaWxlfSxvbjp7XCJjbG9zZVwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnNob3cgPSBmYWxzZVxuICAgICAgICAgICAgICAgIF92bS5kaWFsb2dNb2RlbCA9IG51bGx9fSxtb2RlbDp7dmFsdWU6KF92bS5zaG93KSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLnNob3c9JCR2fSxleHByZXNzaW9uOlwic2hvd1wifX0sW1tfYygndi1jb250YWluZXInLHtzdGF0aWNDbGFzczpcInB4LTAgbXgtMCBwdC0wIG10LTAgY292ZXJcIixzdGF0aWNTdHlsZTp7XCJiYWNrZ3JvdW5kLWNvbG9yXCI6XCJ3aGl0ZSAhaW1wb3J0YW50XCJ9fSxbX2MoJ3YtdG9vbGJhcicse3N0YXRpY0NsYXNzOlwiY29udGFpbmVyIHB5LTEgbXktMCBqdXN0aWZ5LXNwYWNlLWJldHdlZW4gZWxldmF0aW9uLTBcIn0sW19jKCd2LXRvb2xiYXItdGl0bGUnLFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiaGVhZGxpbmVcIn0sW192bS5fdihfdm0uX3MoX3ZtLmRpYWxvZ01vZGVsLnR5cGUubmFtZSkpXSldKSxfdm0uX3YoXCIgXCIpLF9jKCd2LXNwYWNlcicpLF92bS5fdihcIiBcIiksX2MoJ3YtdG9vbGJhci10aXRsZScsW19jKCd2LWljb24nLHtzdGF0aWNDbGFzczpcImZsZXgtZ3Jvdy0wXCIsYXR0cnM6e1widGV4dFwiOlwiXCJ9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uc2hvdyA9IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmRpYWxvZ01vZGVsID0gbnVsbH19fSxbX3ZtLl92KFwiWFxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiKV0pXSwxKV0sMSksX3ZtLl92KFwiIFwiKSxfYygndi1jb250YWluZXInLHtzdGF0aWNTdHlsZTp7XCJwb3NpdGlvblwiOlwicmVsYXRpdmVcIn19LFtfYygnZGl2Jyx7c3RhdGljU3R5bGU6e1wiZm9udC1zaXplXCI6XCIxMHB4XCJ9fSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgXCIrX3ZtLl9zKCfQntGCINCz0YDQsNC20LTQsNC90LjQvdCwOiAnKyhfdm0uZGlhbG9nTW9kZWwudXNlcl9pZCA9PSBfdm0uJHN0b3JlLnN0YXRlLmF1dGgudXNlci5pZCA/ICfQktGLICcgOiBfdm0uZGlhbG9nTW9kZWwudXNlci5mdWxsX25hbWUgKyAnICAnKSkrXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICBcIiksKF92bS4kc3RvcmUuc3RhdGUuYXV0aC51c2VyLnJvbGUgPj0gMTAyNCk/X2MoJ2RpdicsW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoXCIpLF9jKCdyb3V0ZXItbGluaycse2F0dHJzOntcInRvXCI6Jy9maWxlcy8nKyBfdm0uZGlhbG9nTW9kZWwudXNlcl9pZH19LFtfdm0uX3YoXCLQpNCw0LnQu9GLINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1wiKV0pLF92bS5fdihcIilcXG4gICAgICAgICAgICAgICAgICAgICAgICBcIildLDEpOl92bS5fZSgpXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljU3R5bGU6e1wiZm9udC1zaXplXCI6XCIxMHB4XCJ9LGRvbVByb3BzOntcInRleHRDb250ZW50XCI6X3ZtLl9zKCfQotGA0LXQsdC+0LLQsNC90LjQtTonKX19KSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICBcIitfdm0uX3MoX3ZtLmRpYWxvZ01vZGVsLnRleHQpK1wiXFxuICAgICAgICAgICAgICAgICAgICBcIildKV0pLF92bS5fdihcIiBcIiksKF92bS5kaWFsb2dNb2RlbC5tZXNzYWdlcyAmJiBfdm0uZGlhbG9nTW9kZWwubWVzc2FnZXMubGVuZ3RoIHx8IF92bS4kc3RvcmUuc3RhdGUuYXV0aC51c2VyLnJvbGUgPj0gMTI4KT9fYygndi1jb250YWluZXInLHtzdGF0aWNDbGFzczpcIm1hLTAgcGEtMFwifSxbKF92bS5kaWFsb2dNb2RlbC5tZXNzYWdlcyAmJiBfdm0uZGlhbG9nTW9kZWwubWVzc2FnZXMubGVuZ3RoPjApP19jKCd2LWNvbnRhaW5lcicse3N0YXRpY0NsYXNzOlwibWEtMCBwYS0wXCJ9LFtfYygnZGl2JyxbX2MoJ3YtY2FyZCcsW19jKCd2LWFwcC1iYXInLHthdHRyczp7XCJmbGF0XCI6XCJcIixcImNvbG9yXCI6XCJyZ2JhKDAsIDAsIDAsIDApXCJ9fSxbX2MoJ3YtdG9vbGJhci10aXRsZScse3N0YXRpY0NsYXNzOlwidGV4dC1oNiB3aGl0ZS0tdGV4dCBwbC0wXCJ9LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg0KHQvtC+0LHRidC10L3QuNGPXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIpXSksX3ZtLl92KFwiIFwiKSxfYygndi1zcGFjZXInKV0sMSksX3ZtLl92KFwiIFwiKSxfYygndi1jYXJkLXRleHQnLFtfdm0uX2woKF92bS5kaWFsb2dNb2RlbC5tZXNzYWdlcyksZnVuY3Rpb24obWVzc2FnZSl7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImQtZmxleFwiLGNsYXNzOm1lc3NhZ2UudXNlcl9pZCA9PT0gX3ZtLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXIuaWQgPyAndGV4dC1yaWdodCBmbGV4LXJvdy1yZXZlcnNlJyA6ICcnfSxbX2MoJ2Rpdicse2tleTptZXNzYWdlLmlkLHN0YXRpY0NsYXNzOlwicm91bmRlZCBwYS0xIG1hLTFcIixzdGF0aWNTdHlsZTp7XCJiYWNrZ3JvdW5kLWNvbG9yXCI6XCJsaWdodGdyYXlcIixcIndpZHRoXCI6XCI2MCVcIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJmb250LXdlaWdodC1ub3JtYWxcIn0sW19jKCdzdHJvbmcnLHtzdGF0aWNTdHlsZTp7XCJmb250LXNpemVcIjpcIjlweFwifX0sW192bS5fdihfdm0uX3MobWVzc2FnZS5kYXRlKSldKV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiZm9udC13ZWlnaHQtbm9ybWFsXCJ9LFtfYygnc3Ryb25nJyxbX3ZtLl92KF92bS5fcyhtZXNzYWdlLnVzZXIuZnVsbF9uYW1lKSldKV0pLF92bS5fdihcIiBcIiksX2MoJ2RpdicsW192bS5fdihfdm0uX3MobWVzc2FnZS50ZXh0KSldKV0pXSl9KSxfdm0uX3YoXCIgXCIpLChfdm0ubWwgPiAxKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ0ZXh0LWNlbnRlciB4cy0xMlwifSxbX2MoJ3YtcGFnaW5hdGlvbicse2F0dHJzOntcImxlbmd0aFwiOl92bS5tbCxcInRvdGFsLXZpc2libGVcIjozfSxtb2RlbDp7dmFsdWU6KF92bS5tcGFnZSksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS5tcGFnZT0kJHZ9LGV4cHJlc3Npb246XCJtcGFnZVwifX0pXSwxKTpfdm0uX2UoKV0sMildLDEpXSwxKV0pOl92bS5fZSgpLF92bS5fdihcIiBcIiksX2MoJ3YtdG9vbGJhcicse3N0YXRpY0NsYXNzOlwiY29udGFpbmVyIHBhLTAgbWEtMCBqdXN0aWZ5LXNwYWNlLWJldHdlZW4gZWxldmF0aW9uLTBcIn0sW19jKCd2LXRvb2xiYXItdGl0bGUnLHtzdGF0aWNDbGFzczpcIm1sLTNcIn0sW19jKCd2LXRleHQtZmllbGQnLHtzdGF0aWNDbGFzczpcIm10LTRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCIsXCJuYW1lXCI6XCJ0aXRsZVwiLFwibGFiZWxcIjpcItCh0L7QvtCx0YnQtdC90LjQtVwiLFwiZXJyb3ItbWVzc2FnZXNcIjpfdm0ubWVzc2FnZVRleHR9LG1vZGVsOnt2YWx1ZTooX3ZtLm1lc3NhZ2UpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0ubWVzc2FnZT0kJHZ9LGV4cHJlc3Npb246XCJtZXNzYWdlXCJ9fSldLDEpLF92bS5fdihcIiBcIiksX2MoJ3Ytc3BhY2VyJyksX3ZtLl92KFwiIFwiKSxfYygndi10b29sYmFyLXRpdGxlJyx7c3RhdGljQ2xhc3M6XCJtbC0xIG1iLTNcIn0sW19jKCd2LWJ0bicse3N0YXRpY0NsYXNzOlwicm91bmRlZFwiLGF0dHJzOntcImRpc2FibGVkXCI6IV92bS5tZXNzYWdlLFwiY29sb3JcIjpcInByaW1hcnlcIn19LFtfYygndi1pY29uJyx7YXR0cnM6e1widGV4dFwiOlwiXCJ9LG9uOntcImNsaWNrXCI6X3ZtLnNlbmR9fSxbX3ZtLl92KFwibWRpLWNoZWNrLW91dGxpbmVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiKV0pXSwxKV0sMSldLDEpXSwxKTpfdm0uX2UoKV0sMSldXSwyKTpfdm0uX2UoKV0sMSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSJdLCJzb3VyY2VSb290IjoiIn0=
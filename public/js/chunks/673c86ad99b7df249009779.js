(self.webpackChunk=self.webpackChunk||[]).push([[673],{3114:(e,t,s)=>{"use strict";s.d(t,{Z:()=>o});function r(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,r)}return s}function i(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?r(Object(s),!0).forEach((function(t){n(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):r(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}const a={name:"DistrictAutocomplete",props:{level:{type:String,default:"1"},district_id:{type:Number,default:0}},updated:function(){console.log(JSON.stringify(this.district))},data:function(e){return console.log({id:e.$attrs.value}),{entries:[],isLoading:!1,district:{id:e.$attrs.value},search:"",last:"",t:null}},watch:{value:function(e){this.district={id:e}},district_id:function(){this.search=null,this.district=null,this.$emit("input",null)},search:function(e){var t=this;this.entries.length>0&&this.last&&e===this.last||(null!=this.t&&clearTimeout(this.t),this.t=setTimeout((function(){t.isLoading=!0,window.axios.get("/district?"+new URLSearchParams(i({name:arguments.length<=0?void 0:arguments[0],level:t.level,per_page:-1},t.district_id?{parent_district_id:t.district_id}:{})).toString()).then((function(e){t.count=e.data.total,t.entries=e.data.data,t.last=name})).catch((function(e){console.log(e)})).finally((function(){return t.isLoading=!1}))}),1e3,[e+""]))}}};const o=(0,s(1900).Z)(a,(function(){var e=this,t=e.$createElement;return(e._self._c||t)("v-autocomplete",e._b({attrs:{items:e.entries,loading:e.isLoading,"search-input":e.search,"hide-no-data":"",clearable:"","item-text":"name","item-value":"id","return-object":"",autocomplete:"chrome-off"},on:{input:function(t){return e.$emit("input",t?t.id:t)},"update:searchInput":function(t){e.search=t},"update:search-input":function(t){e.search=t}},model:{value:e.district,callback:function(t){e.district=t},expression:"district"}},"v-autocomplete",e.$attrs,!1))}),[],!1,null,"8f518d68",null).exports},1673:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>a});function r(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,r)}return s}function i(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}const n={name:"UserEdit",components:{DistrictAutocomplete:s(3114).Z},data:function(e){return{user:{},messages:{name:"",second_name:"",last_name:"",address:"",email:"",phone:"",points:"",card_id:"",village_id:"",district_id:""}}},computed:{isAdmin:function(){return this.$store.state.auth.user.role>=1024}},mounted:function(){var e=this,t=this.$route.params.id+"";"0"!==t?window.axios.get("/user/"+t).then((function(t){e.user=function(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?r(Object(s),!0).forEach((function(t){i(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):r(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}({},t.data.data)})).catch((function(t){var s;console.log(t),e.$root.$children[0].snackbarText=(null==t||null===(s=t.response)||void 0===s?void 0:s.error)||"Произошла ошибка",e.$root.$children[0].snackbar=!0})):this.user={admin:!1,librarian:!0,district_id:this.$store.state.auth.user.district_id}},methods:{save:function(){var e=this;(this.user.id?window.axios.put("/user/"+this.user.id,this.user):window.axios.post("/user",this.user)).then((function(t){e.$router.push({name:"users"})})).catch((function(t){if(t.response&&422===t.response.status){var s=t.response.data.errors;Object.keys(e.messages).forEach((function(t){var r;e.messages[t]=(null===(r=s[t])||void 0===r?void 0:r[0])||""}))}}))}}};const a=(0,s(1900).Z)(n,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("v-container",{staticClass:"cover"},[s("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:e._s(e.user.id?"Редактирование пользователя":"Добавление сотрудника")}}),e._v(" "),s("v-text-field",{attrs:{label:"Имя",disabled:!e.isAdmin,"error-messages":e.messages.name},model:{value:e.user.name,callback:function(t){e.$set(e.user,"name",t)},expression:"user.name"}}),e._v(" "),s("v-text-field",{attrs:{label:"Фамилия",disabled:!e.isAdmin,"error-messages":e.messages.second_name},model:{value:e.user.second_name,callback:function(t){e.$set(e.user,"second_name",t)},expression:"user.second_name"}}),e._v(" "),s("v-text-field",{attrs:{label:"Отчество",disabled:!e.isAdmin,"error-messages":e.messages.last_name},model:{value:e.user.last_name,callback:function(t){e.$set(e.user,"last_name",t)},expression:"user.last_name"}}),e._v(" "),s("v-text-field",{attrs:{label:"Почта",disabled:!e.isAdmin,"error-messages":e.messages.email},model:{value:e.user.email,callback:function(t){e.$set(e.user,"email",t)},expression:"user.email"}}),e._v(" "),s("v-text-field",{attrs:{label:"Телефон",counter:"10",disabled:!e.isAdmin,"error-messages":e.messages.phone},model:{value:e.user.phone,callback:function(t){e.$set(e.user,"phone",t)},expression:"user.phone"}}),e._v(" "),s("v-text-field",{attrs:{label:"Баллы","error-messages":e.messages.points},model:{value:e.user.points,callback:function(t){e.$set(e.user,"points",t)},expression:"user.points"}}),e._v(" "),s("v-text-field",{attrs:{label:"Номер карты",disabled:!e.isAdmin,"error-messages":e.messages.card_id},model:{value:e.user.card_id,callback:function(t){e.$set(e.user,"card_id",t)},expression:"user.card_id"}}),e._v(" "),e.user.id!=e.$store.state.auth.user.id?s("DistrictAutocomplete",{key:e.user.district_id,attrs:{"error-messages":e.messages.district_id,value:e.user.district_id,disabled:!e.isAdmin,label:"Район",placeholder:"Введите название района"},on:{input:function(t){return e.user.district_id=t}}}):e._e(),e._v(" "),e.user.district_id&&e.user.id!=e.$store.state.auth.user.id?s("DistrictAutocomplete",{attrs:{district_id:e.user.district_id,"error-messages":e.messages.village_id,value:e.user.village_id,disabled:!e.isAdmin,level:"2",label:"Населенный пункт",placeholder:"Введите название района"},on:{input:function(t){return e.user.village_id=t}}}):e._e(),e._v(" "),s("v-text-field",{attrs:{disabled:!e.user.village_id||!e.isAdmin,label:"Улица, дом","error-messages":e.messages.address},model:{value:e.user.address,callback:function(t){e.$set(e.user,"address",t)},expression:"user.address"}}),e._v(" "),e.isAdmin&&e.user.id&&(1&e.user.role)>0?s("v-checkbox",{attrs:{label:"Староста"},on:{change:function(){e.user.admin=!1,e.user.librarian=!1}},model:{value:e.user.curator,callback:function(t){e.$set(e.user,"curator",t)},expression:"user.curator"}}):e._e(),e._v(" "),e.isAdmin&&!e.user.id?s("v-checkbox",{attrs:{label:"Администратор"},on:{change:function(){e.user.curator=!1,e.user.librarian=!1}},model:{value:e.user.admin,callback:function(t){e.$set(e.user,"admin",t)},expression:"user.admin"}}):e._e(),e._v(" "),e.isAdmin&&!e.user.id?s("v-checkbox",{attrs:{label:"Библиотекарь"},on:{change:function(){e.user.curator=!1,e.user.admin=!1}},model:{value:e.user.librarian,callback:function(t){e.$set(e.user,"librarian",t)},expression:"user.librarian"}}):e._e(),e._v(" "),s("v-spacer"),e._v(" "),s("v-btn",{staticClass:"save-btn-text",attrs:{color:"success",disabled:!e.isAdmin||!(e.user.name&&e.user.second_name&&e.user.email&&e.user.phone)},on:{click:e.save}},[e._v("\n        Сохранить\n    ")])],1)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(self.webpackChunk=self.webpackChunk||[]).push([[59],{3181:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});var s=n(4015),a=n.n(s),o=n(3645),l=n.n(o)()(a());l.push([e.id,".place.v-text-field>.v-input__control>.v-input__slot:after,.place.v-text-field>.v-input__control>.v-input__slot:before,.place .v-text-field__slot textarea{display:none!important}","",{version:3,sources:["webpack://./resources/js/pages/EventEdit.vue"],names:[],mappings:"AAmGA,2JAEA,sBACA",sourcesContent:['<template>\n    <v-container\n            class="cover">\n        <v-toolbar-title align="center" justify="center" class="mb-2"\n        v-text="\'Добавление мероприятия\'">\n        </v-toolbar-title>\n        <v-text-field\n            type="text"\n            name="title"\n            label="Заголовок"\n            v-model="event.title"\n            :error-messages="messages.title"\n            >\n        </v-text-field>\n        <v-text-field\n                name="place"\n                label="Место проведения"\n                v-model="event.place"\n                :error-messages="messages.place"\n        ></v-text-field>\n        <v-text-field\n                name="date"\n                label="Дата проведения"\n                v-model="event.date"\n                :error-messages="messages.date"\n        ></v-text-field>\n        <v-text-field\n                name="points"\n                label="Баллы за участие"\n                v-model="event.points"\n                :error-messages="messages.points"\n        ></v-text-field>\n        <v-spacer/>\n        <v-btn class="save-btn-text"\n               color="success"\n               @click="save"\n               :disabled="!(event.place && event.title && event.date)">\n            Сохранить\n        </v-btn>\n    </v-container>\n</template>\n\n<script>\n    export default {\n        name: "PostAdd",\n        components: {\n        },\n        data: (vm) => {\n            return {\n                event: {\n                    id: Number.parseInt(vm.$route.params.id),\n                    title: \'\',\n                    place: \'\',\n                    date: \'\',\n                    points: 0,\n                },\n                messages: {\n                    title: \'\',\n                    place: \'\',\n                    date:\'\',\n                    points: \'\',\n                }\n            }\n        },\n        mounted() {\n            let modelId = this.$route.params.id;\n            if (modelId != 0) {\n                window.axios.get(\'/event/\'+ modelId).then((response) => {\n                    this.event = response.data.data;\n                }).catch((e) => {\n                    console.log(e);\n                    this.$root.$children[0].snackbarText = e?.response?.error || \'Произошла ошибка\';\n                    this.$root.$children[0].snackbar = true;\n                });\n            }\n        },\n        methods: {\n            save() {\n                let id = this.event.id;\n                window.axios[id ? \'put\' : \'post\'](\'/event\' + (id ? \'/\' + id : \'\'), this.event)\n                    .then((r) => {\n                        this.$router.push({name: "events"});\n                    }).catch((e) => {\n                    if (e.response && e.response.status === 422) {\n                        let errors = e.response.data.errors\n                        Object.keys(this.messages).forEach((k)=> {\n                            this.messages[k] = errors[k]?.[0] || \'\';\n                        });\n                    }\n                })\n            },\n        }\n    }\n<\/script>\n\n<style>\n    .place .v-text-field__slot textarea {\n        display: none !important;\n    }\n    .place.v-text-field>.v-input__control>.v-input__slot:after ,\n    .place.v-text-field>.v-input__control>.v-input__slot:before{\n        display: none !important;\n    }\n</style>\n'],sourceRoot:""}]);const r=l},4059:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});const s={name:"PostAdd",components:{},data:function(e){return{event:{id:Number.parseInt(e.$route.params.id),title:"",place:"",date:"",points:0},messages:{title:"",place:"",date:"",points:""}}},mounted:function(){var e=this,t=this.$route.params.id;0!=t&&window.axios.get("/event/"+t).then((function(t){e.event=t.data.data})).catch((function(t){var n;console.log(t),e.$root.$children[0].snackbarText=(null==t||null===(n=t.response)||void 0===n?void 0:n.error)||"Произошла ошибка",e.$root.$children[0].snackbar=!0}))},methods:{save:function(){var e=this,t=this.event.id;window.axios[t?"put":"post"]("/event"+(t?"/"+t:""),this.event).then((function(t){e.$router.push({name:"events"})})).catch((function(t){if(t.response&&422===t.response.status){var n=t.response.data.errors;Object.keys(e.messages).forEach((function(t){var s;e.messages[t]=(null===(s=n[t])||void 0===s?void 0:s[0])||""}))}}))}}};n(9877);const a=(0,n(1900).Z)(s,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("v-container",{staticClass:"cover"},[n("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:e._s("Добавление мероприятия")}}),e._v(" "),n("v-text-field",{attrs:{type:"text",name:"title",label:"Заголовок","error-messages":e.messages.title},model:{value:e.event.title,callback:function(t){e.$set(e.event,"title",t)},expression:"event.title"}}),e._v(" "),n("v-text-field",{attrs:{name:"place",label:"Место проведения","error-messages":e.messages.place},model:{value:e.event.place,callback:function(t){e.$set(e.event,"place",t)},expression:"event.place"}}),e._v(" "),n("v-text-field",{attrs:{name:"date",label:"Дата проведения","error-messages":e.messages.date},model:{value:e.event.date,callback:function(t){e.$set(e.event,"date",t)},expression:"event.date"}}),e._v(" "),n("v-text-field",{attrs:{name:"points",label:"Баллы за участие","error-messages":e.messages.points},model:{value:e.event.points,callback:function(t){e.$set(e.event,"points",t)},expression:"event.points"}}),e._v(" "),n("v-spacer"),e._v(" "),n("v-btn",{staticClass:"save-btn-text",attrs:{color:"success",disabled:!(e.event.place&&e.event.title&&e.event.date)},on:{click:e.save}},[e._v("\n        Сохранить\n    ")])],1)}),[],!1,null,null,null).exports},9877:(e,t,n)=>{var s=n(3181);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[e.id,s,""]]),s.locals&&(e.exports=s.locals);(0,n(5346).Z)("3e1d34fb",s,!0,{})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(self.webpackChunk=self.webpackChunk||[]).push([[538],{3181:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>l});var r=n(4015),s=n.n(r),a=n(3645),o=n.n(a)()(s());o.push([e.id,".place.v-text-field>.v-input__control>.v-input__slot:after,.place.v-text-field>.v-input__control>.v-input__slot:before,.place .v-text-field__slot textarea{display:none!important}","",{version:3,sources:["webpack://./resources/js/pages/EventEdit.vue"],names:[],mappings:"AAiGA,2JAEA,sBACA",sourcesContent:['<template>\r\n    <v-container\r\n            class="cover">\r\n        <v-toolbar-title align="center" justify="center" class="mb-2"\r\n        v-text="\'Добавление мероприятия\'">\r\n        </v-toolbar-title>\r\n        <v-text-field\r\n            type="text"\r\n            name="title"\r\n            label="Заголовок"\r\n            v-model="event.title"\r\n            :error-messages="messages.title"\r\n            >\r\n        </v-text-field>\r\n        <v-text-field\r\n                name="place"\r\n                label="Место проведения"\r\n                v-model="event.place"\r\n                :error-messages="messages.place"\r\n        ></v-text-field>\r\n        <v-text-field\r\n                name="date"\r\n                label="Дата проведения"\r\n                v-model="event.date"\r\n                :error-messages="messages.date"\r\n        ></v-text-field>\r\n        <v-text-field\r\n                name="points"\r\n                label="Баллы за участие"\r\n                v-model="event.points"\r\n                :error-messages="messages.points"\r\n        ></v-text-field>\r\n        <v-spacer/>\r\n        <v-btn class="save-btn-text"\r\n               color="success"\r\n               @click="save"\r\n               :disabled="!(event.place && event.title && event.date)">\r\n            Сохранить\r\n        </v-btn>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: "PostAdd",\r\n        components: {\r\n        },\r\n        data: (vm) => {\r\n            return {\r\n                event: {\r\n                    id: vm.$route.params.id,\r\n                    title: \'\',\r\n                    place: \'\',\r\n                    date: \'\',\r\n                    points: 0,\r\n                },\r\n                messages: {\r\n                    title: \'\',\r\n                    place: \'\',\r\n                    date:\'\',\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            let modelId = this.$route.params.id;\r\n            if (modelId != 0) {\r\n                window.axios.get(\'/event/\'+ modelId).then((response) => {\r\n                    this.event = response.data.data;\r\n                }).catch((e) => {\r\n                    console.log(e);\r\n                    this.$root.$children[0].snackbarText = e?.response?.error || \'Произошла ошибка\';\r\n                    this.$root.$children[0].snackbar = true;\r\n                });\r\n            }\r\n        },\r\n        methods: {\r\n            save() {\r\n                window.axios[this.event.id ? \'put\' : \'post\'](\'/event/\' + (this.event.id || \'\'), this.event)\r\n                    .then((r) => {\r\n                        this.$router.push({name: "events"});\r\n                    }).catch((e) => {\r\n                    if (e.response && e.response.status === 422) {\r\n                        let errors = e.response.data.errors\r\n                        Object.keys(this.messages).forEach((k)=> {\r\n                            this.messages[k] = errors[k]?.[0] || \'\';\r\n                        });\r\n                    }\r\n                })\r\n            },\r\n        }\r\n    }\r\n<\/script>\r\n\r\n<style>\r\n    .place .v-text-field__slot textarea {\r\n        display: none !important;\r\n    }\r\n    .place.v-text-field>.v-input__control>.v-input__slot:after ,\r\n    .place.v-text-field>.v-input__control>.v-input__slot:before{\r\n        display: none !important;\r\n    }\r\n</style>'],sourceRoot:""}]);const l=o},8538:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const r={name:"PostAdd",components:{},data:function(e){return{event:{id:e.$route.params.id,title:"",place:"",date:"",points:0},messages:{title:"",place:"",date:""}}},mounted:function(){var e=this,t=this.$route.params.id;0!=t&&window.axios.get("/event/"+t).then((function(t){e.event=t.data.data})).catch((function(t){var n;console.log(t),e.$root.$children[0].snackbarText=(null==t||null===(n=t.response)||void 0===n?void 0:n.error)||"Произошла ошибка",e.$root.$children[0].snackbar=!0}))},methods:{save:function(){var e=this;window.axios[this.event.id?"put":"post"]("/event/"+(this.event.id||""),this.event).then((function(t){e.$router.push({name:"events"})})).catch((function(t){if(t.response&&422===t.response.status){var n=t.response.data.errors;Object.keys(e.messages).forEach((function(t){var r;e.messages[t]=(null===(r=n[t])||void 0===r?void 0:r[0])||""}))}}))}}};n(9877);const s=(0,n(1900).Z)(r,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("v-container",{staticClass:"cover"},[n("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:e._s("Добавление мероприятия")}}),e._v(" "),n("v-text-field",{attrs:{type:"text",name:"title",label:"Заголовок","error-messages":e.messages.title},model:{value:e.event.title,callback:function(t){e.$set(e.event,"title",t)},expression:"event.title"}}),e._v(" "),n("v-text-field",{attrs:{name:"place",label:"Место проведения","error-messages":e.messages.place},model:{value:e.event.place,callback:function(t){e.$set(e.event,"place",t)},expression:"event.place"}}),e._v(" "),n("v-text-field",{attrs:{name:"date",label:"Дата проведения","error-messages":e.messages.date},model:{value:e.event.date,callback:function(t){e.$set(e.event,"date",t)},expression:"event.date"}}),e._v(" "),n("v-text-field",{attrs:{name:"points",label:"Баллы за участие","error-messages":e.messages.points},model:{value:e.event.points,callback:function(t){e.$set(e.event,"points",t)},expression:"event.points"}}),e._v(" "),n("v-spacer"),e._v(" "),n("v-btn",{staticClass:"save-btn-text",attrs:{color:"success",disabled:!(e.event.place&&e.event.title&&e.event.date)},on:{click:e.save}},[e._v("\n        Сохранить\n    ")])],1)}),[],!1,null,null,null).exports},9877:(e,t,n)=>{var r=n(3181);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.id,r,""]]),r.locals&&(e.exports=r.locals);(0,n(5346).Z)("3e1d34fb",r,!0,{})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
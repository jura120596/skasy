(self.webpackChunk=self.webpackChunk||[]).push([[856],{8097:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});var s=n(4015),a=n.n(s),l=n(3645),o=n.n(l)()(a());o.push([e.id,".place.v-text-field>.v-input__control>.v-input__slot:after,.place.v-text-field>.v-input__control>.v-input__slot:before,.place .v-text-field__slot textarea{display:none!important}","",{version:3,sources:["webpack://./resources/js/pages/BusEventEdit.vue"],names:[],mappings:"AAkFA,2JAEA,sBACA",sourcesContent:['<template>\n    <v-container\n            class="cover">\n        <v-toolbar-title align="center" justify="center" class="mb-2"\n        v-text="\'Добавление рапсисания\'">\n        </v-toolbar-title>\n        <v-text-field\n            type="text"\n            name="title"\n            label="Мрашрут"\n            v-model="event.title"\n            :error-messages="messages.title"\n            >\n        </v-text-field>\n        <v-text-field\n                name="place"\n                label="Остановка"\n                v-model="event.place"\n                :error-messages="messages.place"\n        ></v-text-field>\n        <v-text-field\n                name="date"\n                label="Время отправления"\n                v-model="event.time"\n                :error-messages="messages.time"\n        ></v-text-field>\n        <v-spacer/>\n        <v-btn class="save-btn"\n               color="success"\n               fab\n               @click="create"\n               :disabled="!(event.place && event.title && event.time)"\n               dark>\n            <v-icon>mdi-plus</v-icon>\n        </v-btn>\n    </v-container>\n</template>\n\n<script>\n    export default {\n        name: "PostAdd",\n        components: {\n        },\n        data: (vm) => {\n            return {\n                event: {\n                    id: vm.$route.params.id,\n                    title: \'\',\n                    place: \'\',\n                    time: \'\',\n                },\n                messages: {\n                    title: \'\',\n                    place: \'\',\n                    time:\'\',\n                }\n            }\n        },\n        mounted() {\n        },\n        methods: {\n            create() {\n                window.axios.post(\'/bus/event\', this.event)\n                    .then((r) => {\n                        this.$router.push({name: "bus-events"});\n                    }).catch((e) => {\n                    if (e.response && e.response.status === 422) {\n                        let errors = e.response.data.errors\n                        Object.keys(this.messages).forEach((k)=> {\n                            this.messages[k] = errors[k]?.[0] || \'\';\n                        });\n                    }\n                })\n            },\n        }\n    }\n<\/script>\n\n<style>\n    .place .v-text-field__slot textarea {\n        display: none !important;\n    }\n    .place.v-text-field>.v-input__control>.v-input__slot:after ,\n    .place.v-text-field>.v-input__control>.v-input__slot:before{\n        display: none !important;\n    }\n</style>'],sourceRoot:""}]);const r=o},4856:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});const s={name:"PostAdd",components:{},data:function(e){return{event:{id:e.$route.params.id,title:"",place:"",time:""},messages:{title:"",place:"",time:""}}},mounted:function(){},methods:{create:function(){var e=this;window.axios.post("/bus/event",this.event).then((function(t){e.$router.push({name:"bus-events"})})).catch((function(t){if(t.response&&422===t.response.status){var n=t.response.data.errors;Object.keys(e.messages).forEach((function(t){var s;e.messages[t]=(null===(s=n[t])||void 0===s?void 0:s[0])||""}))}}))}}};n(3311);const a=(0,n(1900).Z)(s,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("v-container",{staticClass:"cover"},[n("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:e._s("Добавление рапсисания")}}),e._v(" "),n("v-text-field",{attrs:{type:"text",name:"title",label:"Мрашрут","error-messages":e.messages.title},model:{value:e.event.title,callback:function(t){e.$set(e.event,"title",t)},expression:"event.title"}}),e._v(" "),n("v-text-field",{attrs:{name:"place",label:"Остановка","error-messages":e.messages.place},model:{value:e.event.place,callback:function(t){e.$set(e.event,"place",t)},expression:"event.place"}}),e._v(" "),n("v-text-field",{attrs:{name:"date",label:"Время отправления","error-messages":e.messages.time},model:{value:e.event.time,callback:function(t){e.$set(e.event,"time",t)},expression:"event.time"}}),e._v(" "),n("v-spacer"),e._v(" "),n("v-btn",{staticClass:"save-btn",attrs:{color:"success",fab:"",disabled:!(e.event.place&&e.event.title&&e.event.time),dark:""},on:{click:e.create}},[n("v-icon",[e._v("mdi-plus")])],1)],1)}),[],!1,null,null,null).exports},3311:(e,t,n)=>{var s=n(8097);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[e.id,s,""]]),s.locals&&(e.exports=s.locals);(0,n(5346).Z)("a8ba38c6",s,!0,{})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
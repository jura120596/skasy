(self.webpackChunk=self.webpackChunk||[]).push([[220],{1220:(t,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>o});const a={name:"Posts",data:function(t){return{l:1,ml:1,requests:[],page:1,mpage:1,dialogModel:null,delete_id:0,show:!1,message:"",messageText:""}},mounted:function(){this.getPage()},methods:{getPage:function(){var t=this;window.axios.get("/request/",{params:{page:this.page,per_page:10,role:"/requests"===this.$route.fullPath?1024:128}}).then((function(e){t.requests=e.data.data,t.l=e.data.last_page})).catch((function(t){console.log(t)}))},delete:function(){var t=this;this.delete_id>0&&window.axios.delete("/request/"+this.delete_id).then((function(e){t.getPage(),t.delete_id=0})).catch((function(t){console.log(t)}))},getMessages:function(){var t=this;window.axios.get("/request/"+this.dialogModel.id+"/messages",{params:{page:this.mpage,per_page:10}}).then((function(e){t.dialogModel.messages=e.data.data,t.ml=e.data.last_page})).catch((function(t){console.log(t)}))},send:function(){var t=this;window.axios.post("/request/"+this.dialogModel.id+"/messages?per_page=10",{text:this.message}).then((function(e){t.dialogModel.messages=e.data.data,t.ml=e.data.last_page,t.message=""})).catch((function(e){console.log(e),e.response&&422===e.response.status&&(t.messageText=e.response.data.errors.text)}))}},watch:{page:function(){this.getPage()},mpage:function(){this.getMessages()},delete_id:function(t){t>0&&this.delete()},show:function(t){t&&this.getMessages()}}};const o=(0,s(1900).Z)(a,(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("v-container",{staticClass:"cover"},[s("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:t._s(1024===t.$store.state.auth.user.role?"Запросы пользователей":"Ваши запросы")}}),t._v(" "),t.requests.length>0?s("div",[s("v-layout",{staticClass:"d-flex flex-row flex-wrap"},t._l(t.requests,(function(e,a){return s("v-flex",{key:a,attrs:{xs12:"",sm6:"",md6:"",lg4:""}},[s("v-card",{staticClass:"ma-1",staticStyle:{position:"relative"},attrs:{elevation:"0",outlined:""}},[t.$store.state.auth.user.id===e.user_id||1024===t.$store.state.auth.user.role?s("div",{staticClass:"d-flex crud",staticStyle:{position:"absolute",right:"5px",top:"-10px","font-size":"10px"}},[s("v-btn",{staticClass:"mr-3",attrs:{color:"red",fab:"",small:"",dark:""},on:{click:function(s){t.delete_id=e.id}}},[s("v-icon",[t._v("mdi-delete")])],1)],1):t._e(),t._v(" "),s("v-container",[s("div",{staticStyle:{position:"absolute",left:"5px",bottom:"20px","font-size":"10px"},domProps:{textContent:t._s("Опубликовано: "+e.date)}}),t._v(" "),s("div",{staticStyle:{position:"absolute",left:"5px",bottom:"5px","font-size":"10px"},domProps:{textContent:t._s("Пользователь: "+(e.user_id==t.$store.state.auth.user.id?"Вы":e.user.full_name))}}),t._v(" "),s("v-spacer"),t._v(" "),s("v-toolbar-title",{staticClass:"text-center mt-2 mb-7",on:{click:function(s){t.dialogModel=e,t.show=!0}}},[t._v(t._s(e.type.name)+"\n                        ")]),t._v(" "),s("v-spacer")],1)],1)],1)})),1),t._v(" "),t.l>1?s("div",{staticClass:"text-center xs-12"},[s("v-pagination",{attrs:{length:t.l,"total-visible":3},model:{value:t.page,callback:function(e){t.page=e},expression:"page"}})],1):t._e()],1):s("div",[s("div",{staticClass:"text-center my-3"},[t._v("Запросов пока нет")])]),t._v(" "),1===t.$store.state.auth.user.role?s("v-btn",{staticClass:"save-btn",attrs:{color:"success",fab:"",dark:""},on:{click:function(e){t.$router.push("/request/0?role="+("/requests"===t.$route.fullPath?1024:128))}}},[s("v-icon",[t._v("mdi-plus")])],1):t._e(),t._v(" "),t.dialogModel?s("v-dialog",{attrs:{fullscreen:t.$vuetify.breakpoint.mobile},on:{close:function(e){t.show=!1,t.dialogModel=null}},model:{value:t.show,callback:function(e){t.show=e},expression:"show"}},[[s("v-container",{staticClass:"px-0 mx-0 pt-0 mt-0 cover",staticStyle:{"background-color":"white !important"}},[s("v-toolbar",{staticClass:"container py-1 my-0 justify-space-between elevation-0"},[s("v-toolbar-title",[s("span",{staticClass:"headline"},[t._v(t._s(t.dialogModel.type.name))])]),t._v(" "),s("v-spacer"),t._v(" "),s("v-toolbar-title",[s("v-icon",{staticClass:"flex-grow-0",attrs:{text:""},on:{click:function(e){t.show=!1,t.dialogModel=null}}},[t._v("X\n                        ")])],1)],1),t._v(" "),s("v-container",{staticStyle:{position:"relative"}},[s("div",{staticStyle:{"font-size":"10px"}},[t._v("\n                        "+t._s("От гражданина: "+(t.dialogModel.user_id==t.$store.state.auth.user.id?"Вы ":t.dialogModel.user.full_name+"  "))+"\n                        "),t.$store.state.auth.user.role>=1024?s("div",[t._v("\n                            ("),s("router-link",{attrs:{to:"/files/"+t.dialogModel.user_id}},[t._v("Файлы пользователя")]),t._v(")\n                        ")],1):t._e()]),t._v(" "),s("div",{staticStyle:{"font-size":"10px"},domProps:{textContent:t._s("Требование:")}}),t._v(" "),s("div",[t._v("\n                        "+t._s(t.dialogModel.text)+"\n                    ")])]),t._v(" "),t.dialogModel.messages&&t.dialogModel.messages.length||t.$store.state.auth.user.role>=128?s("v-container",{staticClass:"ma-0 pa-0"},[t.dialogModel.messages&&t.dialogModel.messages.length>0?s("v-container",{staticClass:"ma-0 pa-0"},[s("div",[s("v-card",[s("v-app-bar",{attrs:{flat:"",color:"rgba(0, 0, 0, 0)"}},[s("v-toolbar-title",{staticClass:"text-h6 white--text pl-0"},[t._v("\n                                        Сообщения\n                                    ")]),t._v(" "),s("v-spacer")],1),t._v(" "),s("v-card-text",[t._l(t.dialogModel.messages,(function(e){return s("div",{staticClass:"d-flex",class:e.user_id===t.$store.state.auth.user.id?"text-right flex-row-reverse":""},[s("div",{key:e.id,staticClass:"rounded pa-1 ma-1",staticStyle:{"background-color":"lightgray",width:"60%"}},[s("div",{staticClass:"font-weight-normal"},[s("strong",{staticStyle:{"font-size":"9px"}},[t._v(t._s(e.date))])]),t._v(" "),s("div",{staticClass:"font-weight-normal"},[s("strong",[t._v(t._s(e.user.full_name))])]),t._v(" "),s("div",[t._v(t._s(e.text))])])])})),t._v(" "),t.ml>1?s("div",{staticClass:"text-center xs-12"},[s("v-pagination",{attrs:{length:t.ml,"total-visible":3},model:{value:t.mpage,callback:function(e){t.mpage=e},expression:"mpage"}})],1):t._e()],2)],1)],1)]):t._e(),t._v(" "),s("v-toolbar",{staticClass:"container pa-0 ma-0 justify-space-between elevation-0"},[s("v-toolbar-title",{staticClass:"ml-3"},[s("v-text-field",{staticClass:"mt-4",attrs:{type:"text",name:"title",label:"Сообщение","error-messages":t.messageText},model:{value:t.message,callback:function(e){t.message=e},expression:"message"}})],1),t._v(" "),s("v-spacer"),t._v(" "),s("v-toolbar-title",{staticClass:"ml-1 mb-3"},[s("v-btn",{staticClass:"rounded",attrs:{disabled:!t.message,color:"primary"}},[s("v-icon",{attrs:{text:""},on:{click:t.send}},[t._v("mdi-check-outline\n                                ")])],1)],1)],1)],1):t._e()],1)]],2):t._e()],1)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(self.webpackChunk=self.webpackChunk||[]).push([[442],{8442:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>o});const a={name:"Posts",data:function(e){return{l:1,ml:1,requests:[],page:1,mpage:1,dialogModel:null,delete_id:0,show:!1,message:"",messageText:""}},mounted:function(){this.getPage()},methods:{getPage:function(){var e=this;window.axios.get("/request/",{params:{page:this.page,per_page:10,role:"/requests"===this.$route.fullPath?1024:128}}).then((function(t){e.requests=t.data.data,e.l=t.data.last_page})).catch((function(e){console.log(e)}))},delete:function(){var e=this;this.delete_id>0&&window.axios.delete("/request/"+this.delete_id).then((function(t){e.getPage(),e.delete_id=0})).catch((function(e){console.log(e)}))},getMessages:function(){var e=this;window.axios.get("/request/"+this.dialogModel.id+"/messages",{params:{page:this.mpage,per_page:10}}).then((function(t){e.dialogModel.messages=t.data.data,e.ml=t.data.last_page})).catch((function(e){console.log(e)}))},send:function(){var e=this;window.axios.post("/request/"+this.dialogModel.id+"/messages?per_page=10",{text:this.message}).then((function(t){e.dialogModel.messages=t.data.data,e.ml=t.data.last_page,e.message=""})).catch((function(t){t.response&&422===t.response.status&&(e.messageText=t.response.data.errors.text),t.response&&500===t.response.status&&(e.messageText=t.response.data.message)}))}},watch:{page:function(){this.getPage()},mpage:function(){this.getMessages()},delete_id:function(e){e>0&&this.delete()},show:function(e){e&&this.getMessages()}}};const o=(0,s(1900).Z)(a,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("v-container",{staticClass:"cover"},[s("v-toolbar-title",{staticClass:"mb-2",attrs:{align:"center",justify:"center"},domProps:{textContent:e._s(1024===e.$store.state.auth.user.role?"Запросы пользователей":"Ваши запросы")}}),e._v(" "),e.requests.length>0?s("div",[s("v-layout",{staticClass:"d-flex flex-row flex-wrap"},e._l(e.requests,(function(t,a){return s("v-flex",{key:a,attrs:{xs12:"",sm6:"",md6:"",lg4:""}},[s("v-card",{staticClass:"ma-1",staticStyle:{position:"relative"},attrs:{elevation:"0",outlined:""}},[e.$store.state.auth.user.id===t.user_id||1024===e.$store.state.auth.user.role?s("div",{staticClass:"d-flex crud",staticStyle:{position:"absolute",right:"5px",top:"-10px","font-size":"10px"}},[s("v-btn",{staticClass:"mr-3",attrs:{color:"red",fab:"",small:"",dark:""},on:{click:function(s){e.delete_id=t.id}}},[s("v-icon",[e._v("mdi-delete")])],1)],1):e._e(),e._v(" "),s("v-container",[s("div",{staticStyle:{position:"absolute",left:"5px",bottom:"20px","font-size":"10px"},domProps:{textContent:e._s("Опубликовано: "+t.date)}}),e._v(" "),s("div",{staticStyle:{position:"absolute",left:"5px",bottom:"5px","font-size":"10px"},domProps:{textContent:e._s("Пользователь: "+(t.user_id==e.$store.state.auth.user.id?"Вы":t.user.full_name))}}),e._v(" "),s("v-spacer"),e._v(" "),s("v-toolbar-title",{staticClass:"text-center mt-2 mb-7",on:{click:function(s){e.dialogModel=t,e.show=!0}}},[e._v(e._s(t.type.name)+"\n                        ")]),e._v(" "),s("v-spacer")],1)],1)],1)})),1),e._v(" "),e.l>1?s("div",{staticClass:"text-center xs-12"},[s("v-pagination",{attrs:{length:e.l,"total-visible":3},model:{value:e.page,callback:function(t){e.page=t},expression:"page"}})],1):e._e()],1):s("div",[s("div",{staticClass:"text-center my-3"},[e._v("Запросов пока нет")])]),e._v(" "),!0&e.$store.state.auth.user.role?s("v-btn",{staticClass:"save-btn",attrs:{color:"success",fab:"",dark:""},on:{click:function(t){e.$router.push("/request/0?role="+("/requests"===e.$route.fullPath?1024:128))}}},[s("v-icon",[e._v("mdi-plus")])],1):e._e(),e._v(" "),e.dialogModel?s("v-dialog",{attrs:{fullscreen:e.$vuetify.breakpoint.mobile},on:{close:function(t){e.show=!1,e.dialogModel=null}},model:{value:e.show,callback:function(t){e.show=t},expression:"show"}},[[s("div",{staticClass:"px-0 mx-0 pt-0 mt-0 cover",staticStyle:{"background-color":"white !important"}},[s("v-toolbar",{staticClass:"container py-1 my-0 justify-space-between elevation-0"},[s("v-toolbar-title",[s("span",{staticClass:"headline"},[e._v(e._s(e.dialogModel.type.name))])]),e._v(" "),s("v-spacer"),e._v(" "),s("v-toolbar-title",[s("v-icon",{staticClass:"flex-grow-0",attrs:{text:""},on:{click:function(t){e.show=!1,e.dialogModel=null}}},[e._v("mdi-close")])],1)],1),e._v(" "),s("v-container",{staticStyle:{position:"relative"}},[s("div",{staticStyle:{"font-size":"10px"}},[e._v("\n                        "+e._s("От гражданина: "+(e.dialogModel.user_id==e.$store.state.auth.user.id?"Вы ":e.dialogModel.user.full_name+"  "))+"\n                        "),e.$store.state.auth.user.role>=1024?s("div",[e._v("\n                            ("),s("router-link",{attrs:{to:"/files/"+e.dialogModel.user_id}},[e._v("Файлы пользователя")]),e._v(")\n                        ")],1):e._e()]),e._v(" "),s("div",{staticStyle:{"font-size":"10px"},domProps:{textContent:e._s("Требование:")}}),e._v(" "),s("div",[e._v("\n                        "+e._s(e.dialogModel.text)+"\n                    ")])]),e._v(" "),e.dialogModel.messages&&e.dialogModel.messages.length||e.$store.state.auth.user.role>=128?s("v-container",[e.dialogModel.messages&&e.dialogModel.messages.length>0?s("v-container",{staticClass:"ma-0 pa-0"},[s("div",[s("v-card",{attrs:{elevation:"0"}},[s("v-card-text",[e._l(e.dialogModel.messages,(function(t){return s("div",{staticClass:"d-flex",class:t.user_id===e.$store.state.auth.user.id?"text-right flex-row-reverse":""},[s("div",{key:t.id,staticClass:"rounded pa-1 ma-1",staticStyle:{"background-color":"lightgray",width:"60%"}},[s("div",{staticClass:"font-weight-normal"},[s("strong",{staticStyle:{"font-size":"9px"}},[e._v(e._s(t.date))])]),e._v(" "),s("div",{staticClass:"font-weight-normal"},[s("strong",[e._v(e._s(t.user.full_name))])]),e._v(" "),s("div",[e._v(e._s(t.text))])])])})),e._v(" "),e.ml>1?s("div",{staticClass:"text-center xs-12"},[s("v-pagination",{attrs:{length:e.ml,"total-visible":3},model:{value:e.mpage,callback:function(t){e.mpage=t},expression:"mpage"}})],1):e._e()],2)],1)],1)]):e._e(),e._v(" "),s("v-toolbar",{staticClass:"container pa-0 ma-0 justify-space-between elevation-0"},[s("v-text-field",{staticClass:"mt-4",attrs:{type:"text",name:"title",label:"Сообщение","error-messages":e.messageText},model:{value:e.message,callback:function(t){e.message=t},expression:"message"}}),e._v(" "),s("v-btn",{staticClass:"rounded",attrs:{disabled:!e.message,color:"primary"}},[s("v-icon",{attrs:{text:""},on:{click:e.send}},[e._v("mdi-check-outline\n                                ")])],1)],1)],1):e._e()],1)]],2):e._e()],1)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,